
Userland/SampleCodeModule/0000-sampleCodeModule.elf:     file format elf64-x86-64


Disassembly of section .text:

0000000000400000 <_start>:
  400000:	55                   	push   rbp
  400001:	48 89 e5             	mov    rbp,rsp
  400004:	ba 00 30 40 00       	mov    edx,0x403000
  400009:	b8 00 30 40 00       	mov    eax,0x403000
  40000e:	48 29 c2             	sub    rdx,rax
  400011:	48 89 d0             	mov    rax,rdx
  400014:	48 89 c2             	mov    rdx,rax
  400017:	be 00 00 00 00       	mov    esi,0x0
  40001c:	bf 00 30 40 00       	mov    edi,0x403000
  400021:	e8 0c 00 00 00       	call   400032 <memset>
  400026:	b8 00 00 00 00       	mov    eax,0x0
  40002b:	e8 74 01 00 00       	call   4001a4 <main>
  400030:	5d                   	pop    rbp
  400031:	c3                   	ret    

0000000000400032 <memset>:
  400032:	55                   	push   rbp
  400033:	48 89 e5             	mov    rbp,rsp
  400036:	48 83 ec 28          	sub    rsp,0x28
  40003a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  40003e:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
  400041:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  400045:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  400048:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  40004b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40004f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  400053:	eb 11                	jmp    400066 <memset+0x34>
  400055:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  400059:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40005d:	48 01 c2             	add    rdx,rax
  400060:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  400064:	88 02                	mov    BYTE PTR [rdx],al
  400066:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40006a:	48 8d 50 ff          	lea    rdx,[rax-0x1]
  40006e:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  400072:	48 85 c0             	test   rax,rax
  400075:	75 de                	jne    400055 <memset+0x23>
  400077:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40007b:	c9                   	leave  
  40007c:	c3                   	ret    

000000000040007d <strlen>:
  40007d:	55                   	push   rbp
  40007e:	48 89 e5             	mov    rbp,rsp
  400081:	48 83 ec 18          	sub    rsp,0x18
  400085:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  400089:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  400090:	90                   	nop
  400091:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400094:	8d 50 01             	lea    edx,[rax+0x1]
  400097:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
  40009a:	48 63 d0             	movsxd rdx,eax
  40009d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4000a1:	48 01 d0             	add    rax,rdx
  4000a4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  4000a7:	84 c0                	test   al,al
  4000a9:	75 e6                	jne    400091 <strlen+0x14>
  4000ab:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4000ae:	83 e8 01             	sub    eax,0x1
  4000b1:	c9                   	leave  
  4000b2:	c3                   	ret    

00000000004000b3 <strcmp>:
  4000b3:	55                   	push   rbp
  4000b4:	48 89 e5             	mov    rbp,rsp
  4000b7:	48 83 ec 10          	sub    rsp,0x10
  4000bb:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4000bf:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  4000c3:	eb 44                	jmp    400109 <strcmp+0x56>
  4000c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4000c9:	48 8d 50 01          	lea    rdx,[rax+0x1]
  4000cd:	48 89 55 f8          	mov    QWORD PTR [rbp-0x8],rdx
  4000d1:	0f b6 08             	movzx  ecx,BYTE PTR [rax]
  4000d4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4000d8:	48 8d 50 01          	lea    rdx,[rax+0x1]
  4000dc:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
  4000e0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  4000e3:	38 c1                	cmp    cl,al
  4000e5:	74 22                	je     400109 <strcmp+0x56>
  4000e7:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  4000eb:	48 83 e8 01          	sub    rax,0x1
  4000ef:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  4000f2:	0f be d0             	movsx  edx,al
  4000f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4000f9:	48 83 e8 01          	sub    rax,0x1
  4000fd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400100:	0f be c0             	movsx  eax,al
  400103:	29 c2                	sub    edx,eax
  400105:	89 d0                	mov    eax,edx
  400107:	eb 1b                	jmp    400124 <strcmp+0x71>
  400109:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40010d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400110:	84 c0                	test   al,al
  400112:	75 b1                	jne    4000c5 <strcmp+0x12>
  400114:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  400118:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  40011b:	84 c0                	test   al,al
  40011d:	75 a6                	jne    4000c5 <strcmp+0x12>
  40011f:	b8 00 00 00 00       	mov    eax,0x0
  400124:	c9                   	leave  
  400125:	c3                   	ret    

0000000000400126 <printf>:
  400126:	55                   	push   rbp
  400127:	48 89 e5             	mov    rbp,rsp
  40012a:	48 83 ec 10          	sub    rsp,0x10
  40012e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  400132:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400136:	48 89 c7             	mov    rdi,rax
  400139:	e8 3f ff ff ff       	call   40007d <strlen>
  40013e:	48 63 d0             	movsxd rdx,eax
  400141:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400145:	48 89 c6             	mov    rsi,rax
  400148:	bf 01 00 00 00       	mov    edi,0x1
  40014d:	e8 8e 08 00 00       	call   4009e0 <print>
  400152:	c9                   	leave  
  400153:	c3                   	ret    

0000000000400154 <getchar>:
  400154:	55                   	push   rbp
  400155:	48 89 e5             	mov    rbp,rsp
  400158:	48 83 ec 10          	sub    rsp,0x10
  40015c:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
  400160:	48 8d 45 ff          	lea    rax,[rbp-0x1]
  400164:	ba 01 00 00 00       	mov    edx,0x1
  400169:	48 89 c6             	mov    rsi,rax
  40016c:	bf 00 00 00 00       	mov    edi,0x0
  400171:	e8 7a 08 00 00       	call   4009f0 <read>
  400176:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  40017a:	0f be c0             	movsx  eax,al
  40017d:	c9                   	leave  
  40017e:	c3                   	ret    

000000000040017f <putchar>:
  40017f:	55                   	push   rbp
  400180:	48 89 e5             	mov    rbp,rsp
  400183:	48 83 ec 10          	sub    rsp,0x10
  400187:	89 f8                	mov    eax,edi
  400189:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  40018c:	48 8d 45 fc          	lea    rax,[rbp-0x4]
  400190:	ba 01 00 00 00       	mov    edx,0x1
  400195:	48 89 c6             	mov    rsi,rax
  400198:	bf 01 00 00 00       	mov    edi,0x1
  40019d:	e8 3e 08 00 00       	call   4009e0 <print>
  4001a2:	c9                   	leave  
  4001a3:	c3                   	ret    

00000000004001a4 <main>:
  4001a4:	55                   	push   rbp
  4001a5:	48 89 e5             	mov    rbp,rsp
  4001a8:	e8 5c 07 00 00       	call   400909 <run_shell>
  4001ad:	5d                   	pop    rbp
  4001ae:	c3                   	ret    

00000000004001af <ayuda>:
  4001af:	55                   	push   rbp
  4001b0:	48 89 e5             	mov    rbp,rsp
  4001b3:	bf 40 10 40 00       	mov    edi,0x401040
  4001b8:	e8 69 ff ff ff       	call   400126 <printf>
  4001bd:	bf 70 10 40 00       	mov    edi,0x401070
  4001c2:	e8 5f ff ff ff       	call   400126 <printf>
  4001c7:	bf b8 10 40 00       	mov    edi,0x4010b8
  4001cc:	e8 55 ff ff ff       	call   400126 <printf>
  4001d1:	bf 08 11 40 00       	mov    edi,0x401108
  4001d6:	e8 4b ff ff ff       	call   400126 <printf>
  4001db:	bf 40 11 40 00       	mov    edi,0x401140
  4001e0:	e8 41 ff ff ff       	call   400126 <printf>
  4001e5:	bf 88 11 40 00       	mov    edi,0x401188
  4001ea:	e8 37 ff ff ff       	call   400126 <printf>
  4001ef:	bf c0 11 40 00       	mov    edi,0x4011c0
  4001f4:	e8 2d ff ff ff       	call   400126 <printf>
  4001f9:	bf 08 12 40 00       	mov    edi,0x401208
  4001fe:	e8 23 ff ff ff       	call   400126 <printf>
  400203:	5d                   	pop    rbp
  400204:	c3                   	ret    

0000000000400205 <inforeg>:
  400205:	55                   	push   rbp
  400206:	48 89 e5             	mov    rbp,rsp
  400209:	e8 36 08 00 00       	call   400a44 <get_info_reg>
  40020e:	5d                   	pop    rbp
  40020f:	c3                   	ret    

0000000000400210 <features_support>:
  400210:	55                   	push   rbp
  400211:	48 89 e5             	mov    rbp,rsp
  400214:	48 83 ec 10          	sub    rsp,0x10
  400218:	bf 4e 12 40 00       	mov    edi,0x40124e
  40021d:	e8 04 ff ff ff       	call   400126 <printf>
  400222:	e8 f8 07 00 00       	call   400a1f <check_cpuid_support>
  400227:	84 c0                	test   al,al
  400229:	0f 84 e0 01 00 00    	je     40040f <features_support+0x1ff>
  40022f:	bf 5e 12 40 00       	mov    edi,0x40125e
  400234:	e8 ed fe ff ff       	call   400126 <printf>
  400239:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [rbp-0x4],0x1
  400240:	48 8d 55 f4          	lea    rdx,[rbp-0xc]
  400244:	48 8d 4d f8          	lea    rcx,[rbp-0x8]
  400248:	48 8d 45 fc          	lea    rax,[rbp-0x4]
  40024c:	48 89 ce             	mov    rsi,rcx
  40024f:	48 89 c7             	mov    rdi,rax
  400252:	e8 d8 07 00 00       	call   400a2f <get_cpuid_info>
  400257:	bf 64 12 40 00       	mov    edi,0x401264
  40025c:	e8 c5 fe ff ff       	call   400126 <printf>
  400261:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  400264:	be 19 00 00 00       	mov    esi,0x19
  400269:	89 c7                	mov    edi,eax
  40026b:	b8 00 00 00 00       	mov    eax,0x0
  400270:	e8 a7 01 00 00       	call   40041c <available>
  400275:	bf 72 12 40 00       	mov    edi,0x401272
  40027a:	e8 a7 fe ff ff       	call   400126 <printf>
  40027f:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  400282:	be 1a 00 00 00       	mov    esi,0x1a
  400287:	89 c7                	mov    edi,eax
  400289:	b8 00 00 00 00       	mov    eax,0x0
  40028e:	e8 89 01 00 00       	call   40041c <available>
  400293:	bf 81 12 40 00       	mov    edi,0x401281
  400298:	e8 89 fe ff ff       	call   400126 <printf>
  40029d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4002a0:	be 00 00 00 00       	mov    esi,0x0
  4002a5:	89 c7                	mov    edi,eax
  4002a7:	b8 00 00 00 00       	mov    eax,0x0
  4002ac:	e8 6b 01 00 00       	call   40041c <available>
  4002b1:	bf 90 12 40 00       	mov    edi,0x401290
  4002b6:	e8 6b fe ff ff       	call   400126 <printf>
  4002bb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4002be:	be 13 00 00 00       	mov    esi,0x13
  4002c3:	89 c7                	mov    edi,eax
  4002c5:	b8 00 00 00 00       	mov    eax,0x0
  4002ca:	e8 4d 01 00 00       	call   40041c <available>
  4002cf:	bf a1 12 40 00       	mov    edi,0x4012a1
  4002d4:	e8 4d fe ff ff       	call   400126 <printf>
  4002d9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4002dc:	be 14 00 00 00       	mov    esi,0x14
  4002e1:	89 c7                	mov    edi,eax
  4002e3:	b8 00 00 00 00       	mov    eax,0x0
  4002e8:	e8 2f 01 00 00       	call   40041c <available>
  4002ed:	bf b2 12 40 00       	mov    edi,0x4012b2
  4002f2:	e8 2f fe ff ff       	call   400126 <printf>
  4002f7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4002fa:	be 19 00 00 00       	mov    esi,0x19
  4002ff:	89 c7                	mov    edi,eax
  400301:	b8 00 00 00 00       	mov    eax,0x0
  400306:	e8 11 01 00 00       	call   40041c <available>
  40030b:	bf c2 12 40 00       	mov    edi,0x4012c2
  400310:	e8 11 fe ff ff       	call   400126 <printf>
  400315:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400318:	be 01 00 00 00       	mov    esi,0x1
  40031d:	89 c7                	mov    edi,eax
  40031f:	b8 00 00 00 00       	mov    eax,0x0
  400324:	e8 f3 00 00 00       	call   40041c <available>
  400329:	bf d6 12 40 00       	mov    edi,0x4012d6
  40032e:	e8 f3 fd ff ff       	call   400126 <printf>
  400333:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400336:	be 1c 00 00 00       	mov    esi,0x1c
  40033b:	89 c7                	mov    edi,eax
  40033d:	b8 00 00 00 00       	mov    eax,0x0
  400342:	e8 d5 00 00 00       	call   40041c <available>
  400347:	bf e4 12 40 00       	mov    edi,0x4012e4
  40034c:	e8 d5 fd ff ff       	call   400126 <printf>
  400351:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400354:	be 1d 00 00 00       	mov    esi,0x1d
  400359:	89 c7                	mov    edi,eax
  40035b:	b8 00 00 00 00       	mov    eax,0x0
  400360:	e8 b7 00 00 00       	call   40041c <available>
  400365:	bf f3 12 40 00       	mov    edi,0x4012f3
  40036a:	e8 b7 fd ff ff       	call   400126 <printf>
  40036f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400372:	be 0c 00 00 00       	mov    esi,0xc
  400377:	89 c7                	mov    edi,eax
  400379:	b8 00 00 00 00       	mov    eax,0x0
  40037e:	e8 99 00 00 00       	call   40041c <available>
  400383:	c7 45 fc 07 00 00 00 	mov    DWORD PTR [rbp-0x4],0x7
  40038a:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
  400391:	48 8d 55 f4          	lea    rdx,[rbp-0xc]
  400395:	48 8d 4d f8          	lea    rcx,[rbp-0x8]
  400399:	48 8d 45 fc          	lea    rax,[rbp-0x4]
  40039d:	48 89 ce             	mov    rsi,rcx
  4003a0:	48 89 c7             	mov    rdi,rax
  4003a3:	e8 87 06 00 00       	call   400a2f <get_cpuid_info>
  4003a8:	bf 01 13 40 00       	mov    edi,0x401301
  4003ad:	e8 74 fd ff ff       	call   400126 <printf>
  4003b2:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  4003b5:	be 06 00 00 00       	mov    esi,0x6
  4003ba:	89 c7                	mov    edi,eax
  4003bc:	b8 00 00 00 00       	mov    eax,0x0
  4003c1:	e8 56 00 00 00       	call   40041c <available>
  4003c6:	bf 10 13 40 00       	mov    edi,0x401310
  4003cb:	e8 56 fd ff ff       	call   400126 <printf>
  4003d0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4003d3:	be 0a 00 00 00       	mov    esi,0xa
  4003d8:	89 c7                	mov    edi,eax
  4003da:	b8 00 00 00 00       	mov    eax,0x0
  4003df:	e8 38 00 00 00       	call   40041c <available>
  4003e4:	bf 25 13 40 00       	mov    edi,0x401325
  4003e9:	e8 38 fd ff ff       	call   400126 <printf>
  4003ee:	e8 7c 06 00 00       	call   400a6f <get_vaesni_info>
  4003f3:	85 c0                	test   eax,eax
  4003f5:	74 0c                	je     400403 <features_support+0x1f3>
  4003f7:	bf 5e 12 40 00       	mov    edi,0x40125e
  4003fc:	e8 25 fd ff ff       	call   400126 <printf>
  400401:	eb 16                	jmp    400419 <features_support+0x209>
  400403:	bf 36 13 40 00       	mov    edi,0x401336
  400408:	e8 19 fd ff ff       	call   400126 <printf>
  40040d:	eb 0a                	jmp    400419 <features_support+0x209>
  40040f:	bf 36 13 40 00       	mov    edi,0x401336
  400414:	e8 0d fd ff ff       	call   400126 <printf>
  400419:	90                   	nop
  40041a:	c9                   	leave  
  40041b:	c3                   	ret    

000000000040041c <available>:
  40041c:	55                   	push   rbp
  40041d:	48 89 e5             	mov    rbp,rsp
  400420:	48 83 ec 10          	sub    rsp,0x10
  400424:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  400428:	89 f0                	mov    eax,esi
  40042a:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
  40042d:	0f be 45 f4          	movsx  eax,BYTE PTR [rbp-0xc]
  400431:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  400435:	89 c1                	mov    ecx,eax
  400437:	48 d3 ea             	shr    rdx,cl
  40043a:	48 89 d0             	mov    rax,rdx
  40043d:	83 e0 01             	and    eax,0x1
  400440:	48 85 c0             	test   rax,rax
  400443:	74 0c                	je     400451 <available+0x35>
  400445:	bf 5e 12 40 00       	mov    edi,0x40125e
  40044a:	e8 d7 fc ff ff       	call   400126 <printf>
  40044f:	eb 0a                	jmp    40045b <available+0x3f>
  400451:	bf 36 13 40 00       	mov    edi,0x401336
  400456:	e8 cb fc ff ff       	call   400126 <printf>
  40045b:	c9                   	leave  
  40045c:	c3                   	ret    

000000000040045d <pow>:
  40045d:	55                   	push   rbp
  40045e:	48 89 e5             	mov    rbp,rsp
  400461:	48 83 ec 20          	sub    rsp,0x20
  400465:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  400469:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  40046d:	48 c7 45 f8 01 00 00 	mov    QWORD PTR [rbp-0x8],0x1
  400474:	00 
  400475:	eb 12                	jmp    400489 <pow+0x2c>
  400477:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40047b:	48 0f af 45 e8       	imul   rax,QWORD PTR [rbp-0x18]
  400480:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400484:	48 83 6d e0 01       	sub    QWORD PTR [rbp-0x20],0x1
  400489:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
  40048e:	75 e7                	jne    400477 <pow+0x1a>
  400490:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400494:	c9                   	leave  
  400495:	c3                   	ret    

0000000000400496 <printmem>:
  400496:	55                   	push   rbp
  400497:	48 89 e5             	mov    rbp,rsp
  40049a:	48 83 c4 80          	add    rsp,0xffffffffffffff80
  40049e:	bf 3b 13 40 00       	mov    edi,0x40133b
  4004a3:	e8 7e fc ff ff       	call   400126 <printf>
  4004a8:	48 c7 45 ce 00 00 00 	mov    QWORD PTR [rbp-0x32],0x0
  4004af:	00 
  4004b0:	48 c7 45 d6 00 00 00 	mov    QWORD PTR [rbp-0x2a],0x0
  4004b7:	00 
  4004b8:	c6 45 de 00          	mov    BYTE PTR [rbp-0x22],0x0
  4004bc:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  4004c3:	eb 5a                	jmp    40051f <printmem+0x89>
  4004c5:	80 7d df 09          	cmp    BYTE PTR [rbp-0x21],0x9
  4004c9:	75 0c                	jne    4004d7 <printmem+0x41>
  4004cb:	b8 00 00 00 00       	mov    eax,0x0
  4004d0:	e8 7f 05 00 00       	call   400a54 <change_shell>
  4004d5:	eb 48                	jmp    40051f <printmem+0x89>
  4004d7:	80 7d df 08          	cmp    BYTE PTR [rbp-0x21],0x8
  4004db:	75 17                	jne    4004f4 <printmem+0x5e>
  4004dd:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
  4004e1:	7e 11                	jle    4004f4 <printmem+0x5e>
  4004e3:	0f be 45 df          	movsx  eax,BYTE PTR [rbp-0x21]
  4004e7:	89 c7                	mov    edi,eax
  4004e9:	e8 91 fc ff ff       	call   40017f <putchar>
  4004ee:	83 6d fc 01          	sub    DWORD PTR [rbp-0x4],0x1
  4004f2:	eb 2b                	jmp    40051f <printmem+0x89>
  4004f4:	80 7d df 08          	cmp    BYTE PTR [rbp-0x21],0x8
  4004f8:	74 25                	je     40051f <printmem+0x89>
  4004fa:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4004fd:	8d 50 01             	lea    edx,[rax+0x1]
  400500:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
  400503:	48 63 d0             	movsxd rdx,eax
  400506:	0f b6 4d df          	movzx  ecx,BYTE PTR [rbp-0x21]
  40050a:	88 4c 15 ce          	mov    BYTE PTR [rbp+rdx*1-0x32],cl
  40050e:	48 98                	cdqe   
  400510:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  400515:	0f be c0             	movsx  eax,al
  400518:	89 c7                	mov    edi,eax
  40051a:	e8 60 fc ff ff       	call   40017f <putchar>
  40051f:	b8 00 00 00 00       	mov    eax,0x0
  400524:	e8 2b fc ff ff       	call   400154 <getchar>
  400529:	88 45 df             	mov    BYTE PTR [rbp-0x21],al
  40052c:	80 7d df 0a          	cmp    BYTE PTR [rbp-0x21],0xa
  400530:	74 06                	je     400538 <printmem+0xa2>
  400532:	83 7d fc 0f          	cmp    DWORD PTR [rbp-0x4],0xf
  400536:	7e 8d                	jle    4004c5 <printmem+0x2f>
  400538:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40053b:	48 98                	cdqe   
  40053d:	c6 44 05 ce 00       	mov    BYTE PTR [rbp+rax*1-0x32],0x0
  400542:	bf 0a 00 00 00       	mov    edi,0xa
  400547:	e8 33 fc ff ff       	call   40017f <putchar>
  40054c:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
  400553:	00 
  400554:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400557:	48 98                	cdqe   
  400559:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  40055d:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  400564:	e9 ce 00 00 00       	jmp    400637 <printmem+0x1a1>
  400569:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40056c:	48 98                	cdqe   
  40056e:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  400573:	3c 2f                	cmp    al,0x2f
  400575:	7e 26                	jle    40059d <printmem+0x107>
  400577:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40057a:	48 98                	cdqe   
  40057c:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  400581:	3c 39                	cmp    al,0x39
  400583:	7f 18                	jg     40059d <printmem+0x107>
  400585:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400588:	48 98                	cdqe   
  40058a:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  40058f:	0f be c0             	movsx  eax,al
  400592:	83 e8 30             	sub    eax,0x30
  400595:	48 98                	cdqe   
  400597:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  40059b:	eb 77                	jmp    400614 <printmem+0x17e>
  40059d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4005a0:	48 98                	cdqe   
  4005a2:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  4005a7:	3c 60                	cmp    al,0x60
  4005a9:	7e 26                	jle    4005d1 <printmem+0x13b>
  4005ab:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4005ae:	48 98                	cdqe   
  4005b0:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  4005b5:	3c 66                	cmp    al,0x66
  4005b7:	7f 18                	jg     4005d1 <printmem+0x13b>
  4005b9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4005bc:	48 98                	cdqe   
  4005be:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  4005c3:	0f be c0             	movsx  eax,al
  4005c6:	83 e8 57             	sub    eax,0x57
  4005c9:	48 98                	cdqe   
  4005cb:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  4005cf:	eb 43                	jmp    400614 <printmem+0x17e>
  4005d1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4005d4:	48 98                	cdqe   
  4005d6:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  4005db:	3c 40                	cmp    al,0x40
  4005dd:	7e 26                	jle    400605 <printmem+0x16f>
  4005df:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4005e2:	48 98                	cdqe   
  4005e4:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  4005e9:	3c 46                	cmp    al,0x46
  4005eb:	7f 18                	jg     400605 <printmem+0x16f>
  4005ed:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4005f0:	48 98                	cdqe   
  4005f2:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  4005f7:	0f be c0             	movsx  eax,al
  4005fa:	83 e8 37             	sub    eax,0x37
  4005fd:	48 98                	cdqe   
  4005ff:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  400603:	eb 0f                	jmp    400614 <printmem+0x17e>
  400605:	bf 4f 13 40 00       	mov    edi,0x40134f
  40060a:	e8 17 fb ff ff       	call   400126 <printf>
  40060f:	e9 9c 00 00 00       	jmp    4006b0 <printmem+0x21a>
  400614:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  400618:	48 89 c6             	mov    rsi,rax
  40061b:	bf 10 00 00 00       	mov    edi,0x10
  400620:	e8 38 fe ff ff       	call   40045d <pow>
  400625:	48 0f af 45 e8       	imul   rax,QWORD PTR [rbp-0x18]
  40062a:	48 01 45 f0          	add    QWORD PTR [rbp-0x10],rax
  40062e:	48 83 6d e0 01       	sub    QWORD PTR [rbp-0x20],0x1
  400633:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  400637:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40063a:	48 98                	cdqe   
  40063c:	0f b6 44 05 ce       	movzx  eax,BYTE PTR [rbp+rax*1-0x32]
  400641:	84 c0                	test   al,al
  400643:	0f 85 20 ff ff ff    	jne    400569 <printmem+0xd3>
  400649:	48 8d 45 8e          	lea    rax,[rbp-0x72]
  40064d:	b9 40 00 00 00       	mov    ecx,0x40
  400652:	be 00 00 00 00       	mov    esi,0x0
  400657:	48 89 30             	mov    QWORD PTR [rax],rsi
  40065a:	48 8d 50 08          	lea    rdx,[rax+0x8]
  40065e:	89 cf                	mov    edi,ecx
  400660:	48 01 fa             	add    rdx,rdi
  400663:	48 89 72 f0          	mov    QWORD PTR [rdx-0x10],rsi
  400667:	48 8d 50 08          	lea    rdx,[rax+0x8]
  40066b:	48 83 e2 f8          	and    rdx,0xfffffffffffffff8
  40066f:	48 29 d0             	sub    rax,rdx
  400672:	01 c1                	add    ecx,eax
  400674:	83 e1 f8             	and    ecx,0xfffffff8
  400677:	89 c8                	mov    eax,ecx
  400679:	c1 e8 03             	shr    eax,0x3
  40067c:	89 c1                	mov    ecx,eax
  40067e:	48 89 d7             	mov    rdi,rdx
  400681:	48 89 f0             	mov    rax,rsi
  400684:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
  400687:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  40068b:	48 8d 45 8e          	lea    rax,[rbp-0x72]
  40068f:	48 89 d6             	mov    rsi,rdx
  400692:	48 89 c7             	mov    rdi,rax
  400695:	e8 c5 03 00 00       	call   400a5f <memdump>
  40069a:	48 8d 45 8e          	lea    rax,[rbp-0x72]
  40069e:	48 89 c7             	mov    rdi,rax
  4006a1:	e8 80 fa ff ff       	call   400126 <printf>
  4006a6:	bf 5d 13 40 00       	mov    edi,0x40135d
  4006ab:	e8 76 fa ff ff       	call   400126 <printf>
  4006b0:	c9                   	leave  
  4006b1:	c3                   	ret    

00000000004006b2 <get_comm>:
  4006b2:	55                   	push   rbp
  4006b3:	48 89 e5             	mov    rbp,rsp
  4006b6:	48 83 ec 20          	sub    rsp,0x20
  4006ba:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4006be:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  4006c5:	eb 29                	jmp    4006f0 <get_comm+0x3e>
  4006c7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4006ca:	48 98                	cdqe   
  4006cc:	48 8b 04 c5 00 20 40 	mov    rax,QWORD PTR [rax*8+0x402000]
  4006d3:	00 
  4006d4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  4006d8:	48 89 d6             	mov    rsi,rdx
  4006db:	48 89 c7             	mov    rdi,rax
  4006de:	e8 d0 f9 ff ff       	call   4000b3 <strcmp>
  4006e3:	85 c0                	test   eax,eax
  4006e5:	75 05                	jne    4006ec <get_comm+0x3a>
  4006e7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4006ea:	eb 0f                	jmp    4006fb <get_comm+0x49>
  4006ec:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  4006f0:	83 7d fc 06          	cmp    DWORD PTR [rbp-0x4],0x6
  4006f4:	7e d1                	jle    4006c7 <get_comm+0x15>
  4006f6:	b8 ff ff ff ff       	mov    eax,0xffffffff
  4006fb:	c9                   	leave  
  4006fc:	c3                   	ret    

00000000004006fd <command_listener>:
  4006fd:	55                   	push   rbp
  4006fe:	48 89 e5             	mov    rbp,rsp
  400701:	48 83 ec 20          	sub    rsp,0x20
  400705:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  400709:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  400710:	eb 5e                	jmp    400770 <command_listener+0x73>
  400712:	80 7d fb 09          	cmp    BYTE PTR [rbp-0x5],0x9
  400716:	75 0c                	jne    400724 <command_listener+0x27>
  400718:	b8 00 00 00 00       	mov    eax,0x0
  40071d:	e8 32 03 00 00       	call   400a54 <change_shell>
  400722:	eb 4c                	jmp    400770 <command_listener+0x73>
  400724:	80 7d fb 08          	cmp    BYTE PTR [rbp-0x5],0x8
  400728:	75 1a                	jne    400744 <command_listener+0x47>
  40072a:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
  40072e:	7e 14                	jle    400744 <command_listener+0x47>
  400730:	0f b6 45 fb          	movzx  eax,BYTE PTR [rbp-0x5]
  400734:	0f be c0             	movsx  eax,al
  400737:	89 c7                	mov    edi,eax
  400739:	e8 41 fa ff ff       	call   40017f <putchar>
  40073e:	83 6d fc 01          	sub    DWORD PTR [rbp-0x4],0x1
  400742:	eb 2c                	jmp    400770 <command_listener+0x73>
  400744:	80 7d fb 08          	cmp    BYTE PTR [rbp-0x5],0x8
  400748:	74 26                	je     400770 <command_listener+0x73>
  40074a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40074d:	8d 50 01             	lea    edx,[rax+0x1]
  400750:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
  400753:	48 63 d0             	movsxd rdx,eax
  400756:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40075a:	48 01 d0             	add    rax,rdx
  40075d:	0f b6 55 fb          	movzx  edx,BYTE PTR [rbp-0x5]
  400761:	88 10                	mov    BYTE PTR [rax],dl
  400763:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400766:	0f be c0             	movsx  eax,al
  400769:	89 c7                	mov    edi,eax
  40076b:	e8 0f fa ff ff       	call   40017f <putchar>
  400770:	b8 00 00 00 00       	mov    eax,0x0
  400775:	e8 da f9 ff ff       	call   400154 <getchar>
  40077a:	88 45 fb             	mov    BYTE PTR [rbp-0x5],al
  40077d:	80 7d fb 0a          	cmp    BYTE PTR [rbp-0x5],0xa
  400781:	75 8f                	jne    400712 <command_listener+0x15>
  400783:	80 7d fb 0a          	cmp    BYTE PTR [rbp-0x5],0xa
  400787:	75 0e                	jne    400797 <command_listener+0x9a>
  400789:	0f b6 45 fb          	movzx  eax,BYTE PTR [rbp-0x5]
  40078d:	0f be c0             	movsx  eax,al
  400790:	89 c7                	mov    edi,eax
  400792:	e8 e8 f9 ff ff       	call   40017f <putchar>
  400797:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40079a:	48 63 d0             	movsxd rdx,eax
  40079d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  4007a1:	48 01 d0             	add    rax,rdx
  4007a4:	c6 00 00             	mov    BYTE PTR [rax],0x0
  4007a7:	c9                   	leave  
  4007a8:	c3                   	ret    

00000000004007a9 <dummy>:
  4007a9:	55                   	push   rbp
  4007aa:	48 89 e5             	mov    rbp,rsp
  4007ad:	48 83 ec 20          	sub    rsp,0x20
  4007b1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  4007b5:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  4007bc:	eb 5e                	jmp    40081c <dummy+0x73>
  4007be:	80 7d fb 09          	cmp    BYTE PTR [rbp-0x5],0x9
  4007c2:	75 0c                	jne    4007d0 <dummy+0x27>
  4007c4:	b8 00 00 00 00       	mov    eax,0x0
  4007c9:	e8 86 02 00 00       	call   400a54 <change_shell>
  4007ce:	eb 4c                	jmp    40081c <dummy+0x73>
  4007d0:	80 7d fb 08          	cmp    BYTE PTR [rbp-0x5],0x8
  4007d4:	75 1a                	jne    4007f0 <dummy+0x47>
  4007d6:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
  4007da:	7e 14                	jle    4007f0 <dummy+0x47>
  4007dc:	0f b6 45 fb          	movzx  eax,BYTE PTR [rbp-0x5]
  4007e0:	0f be c0             	movsx  eax,al
  4007e3:	89 c7                	mov    edi,eax
  4007e5:	e8 95 f9 ff ff       	call   40017f <putchar>
  4007ea:	83 6d fc 01          	sub    DWORD PTR [rbp-0x4],0x1
  4007ee:	eb 2c                	jmp    40081c <dummy+0x73>
  4007f0:	80 7d fb 08          	cmp    BYTE PTR [rbp-0x5],0x8
  4007f4:	74 26                	je     40081c <dummy+0x73>
  4007f6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4007f9:	8d 50 01             	lea    edx,[rax+0x1]
  4007fc:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
  4007ff:	48 63 d0             	movsxd rdx,eax
  400802:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400806:	48 01 d0             	add    rax,rdx
  400809:	0f b6 55 fb          	movzx  edx,BYTE PTR [rbp-0x5]
  40080d:	88 10                	mov    BYTE PTR [rax],dl
  40080f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400812:	0f be c0             	movsx  eax,al
  400815:	89 c7                	mov    edi,eax
  400817:	e8 63 f9 ff ff       	call   40017f <putchar>
  40081c:	b8 00 00 00 00       	mov    eax,0x0
  400821:	e8 2e f9 ff ff       	call   400154 <getchar>
  400826:	88 45 fb             	mov    BYTE PTR [rbp-0x5],al
  400829:	80 7d fb 0a          	cmp    BYTE PTR [rbp-0x5],0xa
  40082d:	75 8f                	jne    4007be <dummy+0x15>
  40082f:	80 7d fb 0a          	cmp    BYTE PTR [rbp-0x5],0xa
  400833:	75 0e                	jne    400843 <dummy+0x9a>
  400835:	0f b6 45 fb          	movzx  eax,BYTE PTR [rbp-0x5]
  400839:	0f be c0             	movsx  eax,al
  40083c:	89 c7                	mov    edi,eax
  40083e:	e8 3c f9 ff ff       	call   40017f <putchar>
  400843:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400846:	48 63 d0             	movsxd rdx,eax
  400849:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40084d:	48 01 d0             	add    rax,rdx
  400850:	c6 00 00             	mov    BYTE PTR [rax],0x0
  400853:	c9                   	leave  
  400854:	c3                   	ret    

0000000000400855 <get_correct_command>:
  400855:	55                   	push   rbp
  400856:	48 89 e5             	mov    rbp,rsp
  400859:	48 83 ec 20          	sub    rsp,0x20
  40085d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  400861:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  400868:	eb 29                	jmp    400893 <get_correct_command+0x3e>
  40086a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40086d:	48 98                	cdqe   
  40086f:	48 8b 04 c5 00 20 40 	mov    rax,QWORD PTR [rax*8+0x402000]
  400876:	00 
  400877:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  40087b:	48 89 d6             	mov    rsi,rdx
  40087e:	48 89 c7             	mov    rdi,rax
  400881:	e8 2d f8 ff ff       	call   4000b3 <strcmp>
  400886:	85 c0                	test   eax,eax
  400888:	75 05                	jne    40088f <get_correct_command+0x3a>
  40088a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  40088d:	eb 0f                	jmp    40089e <get_correct_command+0x49>
  40088f:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  400893:	83 7d fc 06          	cmp    DWORD PTR [rbp-0x4],0x6
  400897:	7e d1                	jle    40086a <get_correct_command+0x15>
  400899:	b8 ff ff ff ff       	mov    eax,0xffffffff
  40089e:	c9                   	leave  
  40089f:	c3                   	ret    

00000000004008a0 <zerodiv>:
  4008a0:	55                   	push   rbp
  4008a1:	48 89 e5             	mov    rbp,rsp
  4008a4:	e8 60 01 00 00       	call   400a09 <try_catch_zerodiv>
  4008a9:	5d                   	pop    rbp
  4008aa:	c3                   	ret    

00000000004008ab <wrongop>:
  4008ab:	55                   	push   rbp
  4008ac:	48 89 e5             	mov    rbp,rsp
  4008af:	e8 4a 01 00 00       	call   4009fe <try_catch_ud>
  4008b4:	5d                   	pop    rbp
  4008b5:	c3                   	ret    

00000000004008b6 <fechayhora>:
  4008b6:	55                   	push   rbp
  4008b7:	48 89 e5             	mov    rbp,rsp
  4008ba:	48 83 ec 20          	sub    rsp,0x20
  4008be:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
  4008c2:	48 8d 45 ee          	lea    rax,[rbp-0x12]
  4008c6:	48 89 d6             	mov    rsi,rdx
  4008c9:	48 89 c7             	mov    rdi,rax
  4008cc:	e8 d8 01 00 00       	call   400aa9 <get_date_time>
  4008d1:	bf 5f 13 40 00       	mov    edi,0x40135f
  4008d6:	e8 4b f8 ff ff       	call   400126 <printf>
  4008db:	48 8d 45 f7          	lea    rax,[rbp-0x9]
  4008df:	48 89 c7             	mov    rdi,rax
  4008e2:	e8 3f f8 ff ff       	call   400126 <printf>
  4008e7:	bf 66 13 40 00       	mov    edi,0x401366
  4008ec:	e8 35 f8 ff ff       	call   400126 <printf>
  4008f1:	48 8d 45 ee          	lea    rax,[rbp-0x12]
  4008f5:	48 89 c7             	mov    rdi,rax
  4008f8:	e8 29 f8 ff ff       	call   400126 <printf>
  4008fd:	bf 5d 13 40 00       	mov    edi,0x40135d
  400902:	e8 1f f8 ff ff       	call   400126 <printf>
  400907:	c9                   	leave  
  400908:	c3                   	ret    

0000000000400909 <run_shell>:
  400909:	55                   	push   rbp
  40090a:	48 89 e5             	mov    rbp,rsp
  40090d:	48 81 ec 10 01 00 00 	sub    rsp,0x110
  400914:	bf 5d 13 40 00       	mov    edi,0x40135d
  400919:	e8 08 f8 ff ff       	call   400126 <printf>
  40091e:	48 8d 95 f0 fe ff ff 	lea    rdx,[rbp-0x110]
  400925:	b8 00 00 00 00       	mov    eax,0x0
  40092a:	b9 20 00 00 00       	mov    ecx,0x20
  40092f:	48 89 d7             	mov    rdi,rdx
  400932:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
  400935:	bf 75 13 40 00       	mov    edi,0x401375
  40093a:	e8 e7 f7 ff ff       	call   400126 <printf>
  40093f:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
  400946:	48 89 c7             	mov    rdi,rax
  400949:	e8 5b fe ff ff       	call   4007a9 <dummy>
  40094e:	48 8d 85 f0 fe ff ff 	lea    rax,[rbp-0x110]
  400955:	48 89 c7             	mov    rdi,rax
  400958:	e8 f8 fe ff ff       	call   400855 <get_correct_command>
  40095d:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  400960:	83 7d fc ff          	cmp    DWORD PTR [rbp-0x4],0xffffffff
  400964:	75 0c                	jne    400972 <run_shell+0x69>
  400966:	bf 80 13 40 00       	mov    edi,0x401380
  40096b:	e8 b6 f7 ff ff       	call   400126 <printf>
  400970:	eb 17                	jmp    400989 <run_shell+0x80>
  400972:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  400975:	48 98                	cdqe   
  400977:	48 8b 04 c5 40 20 40 	mov    rax,QWORD PTR [rax*8+0x402040]
  40097e:	00 
  40097f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  400983:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  400987:	ff d0                	call   rax
  400989:	eb aa                	jmp    400935 <run_shell+0x2c>

000000000040098b <fechayhora_2>:
  40098b:	55                   	push   rbp
  40098c:	48 89 e5             	mov    rbp,rsp
  40098f:	48 83 ec 20          	sub    rsp,0x20
  400993:	48 8d 55 f7          	lea    rdx,[rbp-0x9]
  400997:	48 8d 45 ee          	lea    rax,[rbp-0x12]
  40099b:	48 89 d6             	mov    rsi,rdx
  40099e:	48 89 c7             	mov    rdi,rax
  4009a1:	e8 03 01 00 00       	call   400aa9 <get_date_time>
  4009a6:	bf 5f 13 40 00       	mov    edi,0x40135f
  4009ab:	e8 76 f7 ff ff       	call   400126 <printf>
  4009b0:	48 8d 45 f7          	lea    rax,[rbp-0x9]
  4009b4:	48 89 c7             	mov    rdi,rax
  4009b7:	e8 6a f7 ff ff       	call   400126 <printf>
  4009bc:	bf 66 13 40 00       	mov    edi,0x401366
  4009c1:	e8 60 f7 ff ff       	call   400126 <printf>
  4009c6:	48 8d 45 ee          	lea    rax,[rbp-0x12]
  4009ca:	48 89 c7             	mov    rdi,rax
  4009cd:	e8 54 f7 ff ff       	call   400126 <printf>
  4009d2:	bf 5d 13 40 00       	mov    edi,0x40135d
  4009d7:	e8 4a f7 ff ff       	call   400126 <printf>
  4009dc:	c9                   	leave  
  4009dd:	c3                   	ret    
  4009de:	66 90                	xchg   ax,ax

00000000004009e0 <print>:
  4009e0:	55                   	push   rbp
  4009e1:	48 89 e5             	mov    rbp,rsp
  4009e4:	b8 01 00 00 00       	mov    eax,0x1
  4009e9:	cd 80                	int    0x80
  4009eb:	48 89 ec             	mov    rsp,rbp
  4009ee:	5d                   	pop    rbp
  4009ef:	c3                   	ret    

00000000004009f0 <read>:
  4009f0:	55                   	push   rbp
  4009f1:	48 89 e5             	mov    rbp,rsp
  4009f4:	48 31 c0             	xor    rax,rax
  4009f7:	cd 80                	int    0x80
  4009f9:	48 89 ec             	mov    rsp,rbp
  4009fc:	5d                   	pop    rbp
  4009fd:	c3                   	ret    

00000000004009fe <try_catch_ud>:
  4009fe:	55                   	push   rbp
  4009ff:	48 89 e5             	mov    rbp,rsp
  400a02:	0f 0b                	ud2    
  400a04:	48 89 ec             	mov    rsp,rbp
  400a07:	5d                   	pop    rbp
  400a08:	c3                   	ret    

0000000000400a09 <try_catch_zerodiv>:
  400a09:	55                   	push   rbp
  400a0a:	48 89 e5             	mov    rbp,rsp
  400a0d:	ba 01 00 00 00       	mov    edx,0x1
  400a12:	b8 00 00 00 00       	mov    eax,0x0
  400a17:	48 f7 f0             	div    rax
  400a1a:	48 89 ec             	mov    rsp,rbp
  400a1d:	5d                   	pop    rbp
  400a1e:	c3                   	ret    

0000000000400a1f <check_cpuid_support>:
  400a1f:	55                   	push   rbp
  400a20:	48 89 e5             	mov    rbp,rsp
  400a23:	b8 02 00 00 00       	mov    eax,0x2
  400a28:	cd 80                	int    0x80
  400a2a:	48 89 ec             	mov    rsp,rbp
  400a2d:	5d                   	pop    rbp
  400a2e:	c3                   	ret    

0000000000400a2f <get_cpuid_info>:
  400a2f:	55                   	push   rbp
  400a30:	48 89 e5             	mov    rbp,rsp
  400a33:	8b 07                	mov    eax,DWORD PTR [rdi]
  400a35:	8b 0e                	mov    ecx,DWORD PTR [rsi]
  400a37:	0f a2                	cpuid  
  400a39:	89 16                	mov    DWORD PTR [rsi],edx
  400a3b:	89 0f                	mov    DWORD PTR [rdi],ecx
  400a3d:	89 1a                	mov    DWORD PTR [rdx],ebx
  400a3f:	48 89 ec             	mov    rsp,rbp
  400a42:	5d                   	pop    rbp
  400a43:	c3                   	ret    

0000000000400a44 <get_info_reg>:
  400a44:	55                   	push   rbp
  400a45:	48 89 e5             	mov    rbp,rsp
  400a48:	b8 03 00 00 00       	mov    eax,0x3
  400a4d:	cd 80                	int    0x80
  400a4f:	48 89 ec             	mov    rsp,rbp
  400a52:	5d                   	pop    rbp
  400a53:	c3                   	ret    

0000000000400a54 <change_shell>:
  400a54:	55                   	push   rbp
  400a55:	48 89 e5             	mov    rbp,rsp
  400a58:	cd 81                	int    0x81
  400a5a:	48 89 ec             	mov    rsp,rbp
  400a5d:	5d                   	pop    rbp
  400a5e:	c3                   	ret    

0000000000400a5f <memdump>:
  400a5f:	55                   	push   rbp
  400a60:	48 89 e5             	mov    rbp,rsp
  400a63:	b8 04 00 00 00       	mov    eax,0x4
  400a68:	cd 80                	int    0x80
  400a6a:	48 89 ec             	mov    rsp,rbp
  400a6d:	5d                   	pop    rbp
  400a6e:	c3                   	ret    

0000000000400a6f <get_vaesni_info>:
  400a6f:	55                   	push   rbp
  400a70:	48 89 e5             	mov    rbp,rsp
  400a73:	b8 01 00 00 00       	mov    eax,0x1
  400a78:	0f a2                	cpuid  
  400a7a:	81 e1 00 00 00 1a    	and    ecx,0x1a000000
  400a80:	81 f9 00 00 00 1a    	cmp    ecx,0x1a000000
  400a86:	75 17                	jne    400a9f <not_supported>
  400a88:	b9 00 00 00 00       	mov    ecx,0x0
  400a8d:	0f 01 d0             	xgetbv 
  400a90:	83 e0 06             	and    eax,0x6
  400a93:	83 f8 06             	cmp    eax,0x6
  400a96:	75 07                	jne    400a9f <not_supported>
  400a98:	b8 01 00 00 00       	mov    eax,0x1
  400a9d:	eb 05                	jmp    400aa4 <done>

0000000000400a9f <not_supported>:
  400a9f:	b8 00 00 00 00       	mov    eax,0x0

0000000000400aa4 <done>:
  400aa4:	48 89 ec             	mov    rsp,rbp
  400aa7:	5d                   	pop    rbp
  400aa8:	c3                   	ret    

0000000000400aa9 <get_date_time>:
  400aa9:	55                   	push   rbp
  400aaa:	48 89 e5             	mov    rbp,rsp
  400aad:	b8 05 00 00 00       	mov    eax,0x5
  400ab2:	cd 80                	int    0x80
  400ab4:	48 89 ec             	mov    rsp,rbp
  400ab7:	5d                   	pop    rbp
  400ab8:	c3                   	ret    
  400ab9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ac0:	00 00 00 
  400ac3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400aca:	00 00 00 
  400acd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ad4:	00 00 00 
  400ad7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ade:	00 00 00 
  400ae1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ae8:	00 00 00 
  400aeb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400af2:	00 00 00 
  400af5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400afc:	00 00 00 
  400aff:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b06:	00 00 00 
  400b09:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b10:	00 00 00 
  400b13:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b1a:	00 00 00 
  400b1d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b24:	00 00 00 
  400b27:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b2e:	00 00 00 
  400b31:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b38:	00 00 00 
  400b3b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b42:	00 00 00 
  400b45:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b4c:	00 00 00 
  400b4f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b56:	00 00 00 
  400b59:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b60:	00 00 00 
  400b63:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b6a:	00 00 00 
  400b6d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b74:	00 00 00 
  400b77:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b7e:	00 00 00 
  400b81:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b88:	00 00 00 
  400b8b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b92:	00 00 00 
  400b95:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400b9c:	00 00 00 
  400b9f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ba6:	00 00 00 
  400ba9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400bb0:	00 00 00 
  400bb3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400bba:	00 00 00 
  400bbd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400bc4:	00 00 00 
  400bc7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400bce:	00 00 00 
  400bd1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400bd8:	00 00 00 
  400bdb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400be2:	00 00 00 
  400be5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400bec:	00 00 00 
  400bef:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400bf6:	00 00 00 
  400bf9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c00:	00 00 00 
  400c03:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c0a:	00 00 00 
  400c0d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c14:	00 00 00 
  400c17:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c1e:	00 00 00 
  400c21:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c28:	00 00 00 
  400c2b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c32:	00 00 00 
  400c35:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c3c:	00 00 00 
  400c3f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c46:	00 00 00 
  400c49:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c50:	00 00 00 
  400c53:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c5a:	00 00 00 
  400c5d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c64:	00 00 00 
  400c67:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c6e:	00 00 00 
  400c71:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c78:	00 00 00 
  400c7b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c82:	00 00 00 
  400c85:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c8c:	00 00 00 
  400c8f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400c96:	00 00 00 
  400c99:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ca0:	00 00 00 
  400ca3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400caa:	00 00 00 
  400cad:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400cb4:	00 00 00 
  400cb7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400cbe:	00 00 00 
  400cc1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400cc8:	00 00 00 
  400ccb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400cd2:	00 00 00 
  400cd5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400cdc:	00 00 00 
  400cdf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ce6:	00 00 00 
  400ce9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400cf0:	00 00 00 
  400cf3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400cfa:	00 00 00 
  400cfd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d04:	00 00 00 
  400d07:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d0e:	00 00 00 
  400d11:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d18:	00 00 00 
  400d1b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d22:	00 00 00 
  400d25:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d2c:	00 00 00 
  400d2f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d36:	00 00 00 
  400d39:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d40:	00 00 00 
  400d43:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d4a:	00 00 00 
  400d4d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d54:	00 00 00 
  400d57:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d5e:	00 00 00 
  400d61:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d68:	00 00 00 
  400d6b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d72:	00 00 00 
  400d75:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d7c:	00 00 00 
  400d7f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d86:	00 00 00 
  400d89:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d90:	00 00 00 
  400d93:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400d9a:	00 00 00 
  400d9d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400da4:	00 00 00 
  400da7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400dae:	00 00 00 
  400db1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400db8:	00 00 00 
  400dbb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400dc2:	00 00 00 
  400dc5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400dcc:	00 00 00 
  400dcf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400dd6:	00 00 00 
  400dd9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400de0:	00 00 00 
  400de3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400dea:	00 00 00 
  400ded:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400df4:	00 00 00 
  400df7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400dfe:	00 00 00 
  400e01:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e08:	00 00 00 
  400e0b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e12:	00 00 00 
  400e15:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e1c:	00 00 00 
  400e1f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e26:	00 00 00 
  400e29:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e30:	00 00 00 
  400e33:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e3a:	00 00 00 
  400e3d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e44:	00 00 00 
  400e47:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e4e:	00 00 00 
  400e51:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e58:	00 00 00 
  400e5b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e62:	00 00 00 
  400e65:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e6c:	00 00 00 
  400e6f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e76:	00 00 00 
  400e79:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e80:	00 00 00 
  400e83:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e8a:	00 00 00 
  400e8d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e94:	00 00 00 
  400e97:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400e9e:	00 00 00 
  400ea1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ea8:	00 00 00 
  400eab:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400eb2:	00 00 00 
  400eb5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ebc:	00 00 00 
  400ebf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ec6:	00 00 00 
  400ec9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ed0:	00 00 00 
  400ed3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400eda:	00 00 00 
  400edd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ee4:	00 00 00 
  400ee7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400eee:	00 00 00 
  400ef1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ef8:	00 00 00 
  400efb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f02:	00 00 00 
  400f05:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f0c:	00 00 00 
  400f0f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f16:	00 00 00 
  400f19:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f20:	00 00 00 
  400f23:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f2a:	00 00 00 
  400f2d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f34:	00 00 00 
  400f37:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f3e:	00 00 00 
  400f41:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f48:	00 00 00 
  400f4b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f52:	00 00 00 
  400f55:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f5c:	00 00 00 
  400f5f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f66:	00 00 00 
  400f69:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f70:	00 00 00 
  400f73:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f7a:	00 00 00 
  400f7d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f84:	00 00 00 
  400f87:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f8e:	00 00 00 
  400f91:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400f98:	00 00 00 
  400f9b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400fa2:	00 00 00 
  400fa5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400fac:	00 00 00 
  400faf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400fb6:	00 00 00 
  400fb9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400fc0:	00 00 00 
  400fc3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400fca:	00 00 00 
  400fcd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400fd4:	00 00 00 
  400fd7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400fde:	00 00 00 
  400fe1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400fe8:	00 00 00 
  400feb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ff2:	00 00 00 
  400ff5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400ffc:	00 00 00 
  400fff:	90                   	nop
  401000:	61                   	(bad)  
  401001:	79 75                	jns    401078 <get_date_time+0x5cf>
  401003:	64 61                	fs (bad) 
  401005:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
  401008:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  40100a:	72 65                	jb     401071 <get_date_time+0x5c8>
  40100c:	67 00 73 75          	add    BYTE PTR [ebx+0x75],dh
  401010:	70 70                	jo     401082 <get_date_time+0x5d9>
  401012:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  401013:	72 74                	jb     401089 <get_date_time+0x5e0>
  401015:	00 7a 65             	add    BYTE PTR [rdx+0x65],bh
  401018:	72 6f                	jb     401089 <get_date_time+0x5e0>
  40101a:	64 69 76 00 77 72 6f 	imul   esi,DWORD PTR fs:[rsi+0x0],0x6e6f7277
  401021:	6e 
  401022:	67 6f                	outs   dx,DWORD PTR ds:[esi]
  401024:	70 00                	jo     401026 <get_date_time+0x57d>
  401026:	66 65 63 68 61       	movsxd bp,DWORD PTR gs:[rax+0x61]
  40102b:	79 68                	jns    401095 <get_date_time+0x5ec>
  40102d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40102e:	72 61                	jb     401091 <get_date_time+0x5e8>
  401030:	00 70 72             	add    BYTE PTR [rax+0x72],dh
  401033:	69 6e 74 6d 65 6d 00 	imul   ebp,DWORD PTR [rsi+0x74],0x6d656d
  40103a:	00 00                	add    BYTE PTR [rax],al
  40103c:	00 00                	add    BYTE PTR [rax],al
  40103e:	00 00                	add    BYTE PTR [rax],al
  401040:	0a 4c 6f 73          	or     cl,BYTE PTR [rdi+rbp*2+0x73]
  401044:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
  401047:	6d                   	ins    DWORD PTR es:[rdi],dx
  401048:	61                   	(bad)  
  401049:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40104a:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  40104c:	73 20                	jae    40106e <get_date_time+0x5c5>
  40104e:	64 69 73 70 6f 6e 69 	imul   esi,DWORD PTR fs:[rbx+0x70],0x62696e6f
  401055:	62 
  401056:	6c                   	ins    BYTE PTR es:[rdi],dx
  401057:	65 73 20             	gs jae 40107a <get_date_time+0x5d1>
  40105a:	73 6f                	jae    4010cb <get_date_time+0x622>
  40105c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40105d:	20 6c 6f 73          	and    BYTE PTR [rdi+rbp*2+0x73],ch
  401061:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
  401064:	67 75 69             	addr32 jne 4010d0 <get_date_time+0x627>
  401067:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  401069:	74 65                	je     4010d0 <get_date_time+0x627>
  40106b:	73 3a                	jae    4010a7 <get_date_time+0x5fe>
  40106d:	0a 0a                	or     cl,BYTE PTR [rdx]
  40106f:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
  401072:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  401074:	72 65                	jb     4010db <get_date_time+0x632>
  401076:	67 20 20             	and    BYTE PTR [eax],ah
  401079:	20 20                	and    BYTE PTR [rax],ah
  40107b:	20 20                	and    BYTE PTR [rax],ah
  40107d:	20 2d 69 6d 70 72    	and    BYTE PTR [rip+0x72706d69],ch        # 72b07dec <bss+0x72704dec>
  401083:	69 6d 65 20 65 6e 20 	imul   ebp,DWORD PTR [rbp+0x65],0x206e6520
  40108a:	70 61                	jo     4010ed <get_date_time+0x644>
  40108c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40108d:	74 61                	je     4010f0 <get_date_time+0x647>
  40108f:	6c                   	ins    BYTE PTR es:[rdi],dx
  401090:	6c                   	ins    BYTE PTR es:[rdi],dx
  401091:	61                   	(bad)  
  401092:	20 65 6c             	and    BYTE PTR [rbp+0x6c],ah
  401095:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
  401098:	6c                   	ins    BYTE PTR es:[rdi],dx
  401099:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40109a:	72 20                	jb     4010bc <get_date_time+0x613>
  40109c:	64 65 20 74 6f 64    	fs and BYTE PTR gs:[rdi+rbp*2+0x64],dh
  4010a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4010a3:	73 20                	jae    4010c5 <get_date_time+0x61c>
  4010a5:	6c                   	ins    BYTE PTR es:[rdi],dx
  4010a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4010a7:	73 20                	jae    4010c9 <get_date_time+0x620>
  4010a9:	72 65                	jb     401110 <get_date_time+0x667>
  4010ab:	67 69 73 74 72 6f 73 	imul   esi,DWORD PTR [ebx+0x74],0x2e736f72
  4010b2:	2e 
  4010b3:	0a 00                	or     al,BYTE PTR [rax]
  4010b5:	00 00                	add    BYTE PTR [rax],al
  4010b7:	00 70 72             	add    BYTE PTR [rax+0x72],dh
  4010ba:	69 6e 74 6d 65 6d 20 	imul   ebp,DWORD PTR [rsi+0x74],0x206d656d
  4010c1:	20 20                	and    BYTE PTR [rax],ah
  4010c3:	20 20                	and    BYTE PTR [rax],ah
  4010c5:	20 2d 72 65 61 6c    	and    BYTE PTR [rip+0x6c616572],ch        # 6ca1763d <bss+0x6c61463d>
  4010cb:	69 7a 61 20 75 6e 20 	imul   edi,DWORD PTR [rdx+0x61],0x206e7520
  4010d2:	76 6f                	jbe    401143 <get_date_time+0x69a>
  4010d4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4010d5:	63 61 64             	movsxd esp,DWORD PTR [rcx+0x64]
  4010d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4010d9:	20 64 65 20          	and    BYTE PTR [rbp+riz*2+0x20],ah
  4010dd:	6d                   	ins    DWORD PTR es:[rdi],dx
  4010de:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  4010e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4010e1:	72 69                	jb     40114c <get_date_time+0x6a3>
  4010e3:	61                   	(bad)  
  4010e4:	20 64 65 20          	and    BYTE PTR [rbp+riz*2+0x20],ah
  4010e8:	33 32                	xor    esi,DWORD PTR [rdx]
  4010ea:	20 62 79             	and    BYTE PTR [rdx+0x79],ah
  4010ed:	74 65                	je     401154 <get_date_time+0x6ab>
  4010ef:	73 20                	jae    401111 <get_date_time+0x668>
  4010f1:	61                   	(bad)  
  4010f2:	20 70 61             	and    BYTE PTR [rax+0x61],dh
  4010f5:	72 74                	jb     40116b <get_date_time+0x6c2>
  4010f7:	69 72 20 64 65 20 6c 	imul   esi,DWORD PTR [rdx+0x20],0x6c206564
  4010fe:	61                   	(bad)  
  4010ff:	0a 00                	or     al,BYTE PTR [rax]
  401101:	00 00                	add    BYTE PTR [rax],al
  401103:	00 00                	add    BYTE PTR [rax],al
  401105:	00 00                	add    BYTE PTR [rax],al
  401107:	00 20                	add    BYTE PTR [rax],ah
  401109:	20 20                	and    BYTE PTR [rax],ah
  40110b:	20 20                	and    BYTE PTR [rax],ah
  40110d:	20 20                	and    BYTE PTR [rax],ah
  40110f:	20 20                	and    BYTE PTR [rax],ah
  401111:	20 20                	and    BYTE PTR [rax],ah
  401113:	20 20                	and    BYTE PTR [rax],ah
  401115:	20 20                	and    BYTE PTR [rax],ah
  401117:	64 69 72 65 63 63 69 	imul   esi,DWORD PTR fs:[rdx+0x65],0x6f696363
  40111e:	6f 
  40111f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  401120:	20 71 75             	and    BYTE PTR [rcx+0x75],dh
  401123:	65 20 73 65          	and    BYTE PTR gs:[rbx+0x65],dh
  401127:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
  40112a:	63 69 62             	movsxd ebp,DWORD PTR [rcx+0x62]
  40112d:	65 20 63 6f          	and    BYTE PTR gs:[rbx+0x6f],ah
  401131:	6d                   	ins    DWORD PTR es:[rdi],dx
  401132:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  401133:	20 61 72             	and    BYTE PTR [rcx+0x72],ah
  401136:	67 75 6d             	addr32 jne 4011a6 <get_date_time+0x6fd>
  401139:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  40113b:	74 6f                	je     4011ac <get_date_time+0x703>
  40113d:	2e 0a 00             	or     al,BYTE PTR cs:[rax]
  401140:	66 65 63 68 61       	movsxd bp,DWORD PTR gs:[rax+0x61]
  401145:	79 68                	jns    4011af <get_date_time+0x706>
  401147:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  401148:	72 61                	jb     4011ab <get_date_time+0x702>
  40114a:	20 20                	and    BYTE PTR [rax],ah
  40114c:	20 20                	and    BYTE PTR [rax],ah
  40114e:	2d 64 65 73 70       	sub    eax,0x70736564
  401153:	6c                   	ins    BYTE PTR es:[rdi],dx
  401154:	65 67 61             	gs addr32 (bad) 
  401157:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
  40115a:	20 70 61             	and    BYTE PTR [rax+0x61],dh
  40115d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40115e:	74 61                	je     4011c1 <get_date_time+0x718>
  401160:	6c                   	ins    BYTE PTR es:[rdi],dx
  401161:	6c                   	ins    BYTE PTR es:[rdi],dx
  401162:	61                   	(bad)  
  401163:	20 65 6c             	and    BYTE PTR [rbp+0x6c],ah
  401166:	20 64 69 61          	and    BYTE PTR [rcx+rbp*2+0x61],ah
  40116a:	20 79 20             	and    BYTE PTR [rcx+0x20],bh
  40116d:	6c                   	ins    BYTE PTR es:[rdi],dx
  40116e:	61                   	(bad)  
  40116f:	20 68 6f             	and    BYTE PTR [rax+0x6f],ch
  401172:	72 61                	jb     4011d5 <get_date_time+0x72c>
  401174:	20 64 65 6c          	and    BYTE PTR [rbp+riz*2+0x6c],ah
  401178:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
  40117b:	73 74                	jae    4011f1 <get_date_time+0x748>
  40117d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  40117f:	61                   	(bad)  
  401180:	2e 0a 00             	or     al,BYTE PTR cs:[rax]
  401183:	00 00                	add    BYTE PTR [rax],al
  401185:	00 00                	add    BYTE PTR [rax],al
  401187:	00 61 79             	add    BYTE PTR [rcx+0x79],ah
  40118a:	75 64                	jne    4011f0 <get_date_time+0x747>
  40118c:	61                   	(bad)  
  40118d:	20 20                	and    BYTE PTR [rax],ah
  40118f:	20 20                	and    BYTE PTR [rax],ah
  401191:	20 20                	and    BYTE PTR [rax],ah
  401193:	20 20                	and    BYTE PTR [rax],ah
  401195:	20 2d 6d 75 65 73    	and    BYTE PTR [rip+0x7365756d],ch        # 73a58708 <bss+0x73655708>
  40119b:	74 72                	je     40120f <get_date_time+0x766>
  40119d:	61                   	(bad)  
  40119e:	20 74 6f 64          	and    BYTE PTR [rdi+rbp*2+0x64],dh
  4011a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4011a3:	73 20                	jae    4011c5 <get_date_time+0x71c>
  4011a5:	6c                   	ins    BYTE PTR es:[rdi],dx
  4011a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4011a7:	73 20                	jae    4011c9 <get_date_time+0x720>
  4011a9:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  4011ac:	61                   	(bad)  
  4011ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4011ae:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  4011b0:	73 20                	jae    4011d2 <get_date_time+0x729>
  4011b2:	64 69 73 70 6f 6e 69 	imul   esi,DWORD PTR fs:[rbx+0x70],0x62696e6f
  4011b9:	62 
  4011ba:	6c                   	ins    BYTE PTR es:[rdi],dx
  4011bb:	65 73 2e             	gs jae 4011ec <get_date_time+0x743>
  4011be:	0a 00                	or     al,BYTE PTR [rax]
  4011c0:	7a 65                	jp     401227 <get_date_time+0x77e>
  4011c2:	72 6f                	jb     401233 <get_date_time+0x78a>
  4011c4:	64 69 76 20 20 20 20 	imul   esi,DWORD PTR fs:[rsi+0x20],0x20202020
  4011cb:	20 
  4011cc:	20 20                	and    BYTE PTR [rax],ah
  4011ce:	2d 6c 61 6e 7a       	sub    eax,0x7a6e616c
  4011d3:	61                   	(bad)  
  4011d4:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  4011d7:	61                   	(bad)  
  4011d8:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
  4011db:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
  4011de:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
  4011e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4011e2:	20 64 65 20          	and    BYTE PTR [rbp+riz*2+0x20],ah
  4011e6:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
  4011e9:	69 67 6f 20 30 30 2e 	imul   esp,DWORD PTR [rdi+0x6f],0x2e303020
  4011f0:	20 44 69 76          	and    BYTE PTR [rcx+rbp*2+0x76],al
  4011f4:	69 73 69 6f 6e 20 62 	imul   esi,DWORD PTR [rbx+0x69],0x62206e6f
  4011fb:	79 20                	jns    40121d <get_date_time+0x774>
  4011fd:	7a 65                	jp     401264 <get_date_time+0x7bb>
  4011ff:	72 6f                	jb     401270 <get_date_time+0x7c7>
  401201:	2e 0a 00             	or     al,BYTE PTR cs:[rax]
  401204:	00 00                	add    BYTE PTR [rax],al
  401206:	00 00                	add    BYTE PTR [rax],al
  401208:	77 72                	ja     40127c <get_date_time+0x7d3>
  40120a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40120b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40120c:	67 6f                	outs   dx,DWORD PTR ds:[esi]
  40120e:	70 20                	jo     401230 <get_date_time+0x787>
  401210:	20 20                	and    BYTE PTR [rax],ah
  401212:	20 20                	and    BYTE PTR [rax],ah
  401214:	20 20                	and    BYTE PTR [rax],ah
  401216:	2d 6c 61 6e 7a       	sub    eax,0x7a6e616c
  40121b:	61                   	(bad)  
  40121c:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
  40121f:	61                   	(bad)  
  401220:	20 65 78             	and    BYTE PTR [rbp+0x78],ah
  401223:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
  401226:	63 69 6f             	movsxd ebp,DWORD PTR [rcx+0x6f]
  401229:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40122a:	20 64 65 20          	and    BYTE PTR [rbp+riz*2+0x20],ah
  40122e:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
  401231:	69 67 6f 20 30 36 2e 	imul   esp,DWORD PTR [rdi+0x6f],0x2e363020
  401238:	20 57 72             	and    BYTE PTR [rdi+0x72],dl
  40123b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40123c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40123d:	67 20 4f 70          	and    BYTE PTR [edi+0x70],cl
  401241:	65 72 61             	gs jb  4012a5 <get_date_time+0x7fc>
  401244:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  401245:	64 20 43 6f          	and    BYTE PTR fs:[rbx+0x6f],al
  401249:	64 65 2e 0a 00       	fs gs or al,BYTE PTR cs:[rax]
  40124e:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
  401251:	69 64 20 73 75 70 70 	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6f707075
  401258:	6f 
  401259:	72 74                	jb     4012cf <get_date_time+0x826>
  40125b:	3a 20                	cmp    ah,BYTE PTR [rax]
  40125d:	00 79 65             	add    BYTE PTR [rcx+0x65],bh
  401260:	73 2e                	jae    401290 <get_date_time+0x7e7>
  401262:	0a 00                	or     al,BYTE PTR [rax]
  401264:	73 73                	jae    4012d9 <get_date_time+0x830>
  401266:	65 20 73 75          	and    BYTE PTR gs:[rbx+0x75],dh
  40126a:	70 70                	jo     4012dc <get_date_time+0x833>
  40126c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40126d:	72 74                	jb     4012e3 <get_date_time+0x83a>
  40126f:	3a 20                	cmp    ah,BYTE PTR [rax]
  401271:	00 73 73             	add    BYTE PTR [rbx+0x73],dh
  401274:	65 32 20             	xor    ah,BYTE PTR gs:[rax]
  401277:	73 75                	jae    4012ee <get_date_time+0x845>
  401279:	70 70                	jo     4012eb <get_date_time+0x842>
  40127b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40127c:	72 74                	jb     4012f2 <get_date_time+0x849>
  40127e:	3a 20                	cmp    ah,BYTE PTR [rax]
  401280:	00 73 73             	add    BYTE PTR [rbx+0x73],dh
  401283:	65 33 20             	xor    esp,DWORD PTR gs:[rax]
  401286:	73 75                	jae    4012fd <get_date_time+0x854>
  401288:	70 70                	jo     4012fa <get_date_time+0x851>
  40128a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40128b:	72 74                	jb     401301 <get_date_time+0x858>
  40128d:	3a 20                	cmp    ah,BYTE PTR [rax]
  40128f:	00 73 73             	add    BYTE PTR [rbx+0x73],dh
  401292:	65 34 2e             	gs xor al,0x2e
  401295:	31 20                	xor    DWORD PTR [rax],esp
  401297:	73 75                	jae    40130e <get_date_time+0x865>
  401299:	70 70                	jo     40130b <get_date_time+0x862>
  40129b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40129c:	72 74                	jb     401312 <get_date_time+0x869>
  40129e:	3a 20                	cmp    ah,BYTE PTR [rax]
  4012a0:	00 73 73             	add    BYTE PTR [rbx+0x73],dh
  4012a3:	65 34 2e             	gs xor al,0x2e
  4012a6:	32 20                	xor    ah,BYTE PTR [rax]
  4012a8:	73 75                	jae    40131f <get_date_time+0x876>
  4012aa:	70 70                	jo     40131c <get_date_time+0x873>
  4012ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4012ad:	72 74                	jb     401323 <get_date_time+0x87a>
  4012af:	3a 20                	cmp    ah,BYTE PTR [rax]
  4012b1:	00 61 65             	add    BYTE PTR [rcx+0x65],ah
  4012b4:	73 6e                	jae    401324 <get_date_time+0x87b>
  4012b6:	69 20 73 75 70 70    	imul   esp,DWORD PTR [rax],0x70707573
  4012bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4012bd:	72 74                	jb     401333 <get_date_time+0x88a>
  4012bf:	3a 20                	cmp    ah,BYTE PTR [rax]
  4012c1:	00 70 63             	add    BYTE PTR [rax+0x63],dh
  4012c4:	6c                   	ins    BYTE PTR es:[rdi],dx
  4012c5:	6d                   	ins    DWORD PTR es:[rdi],dx
  4012c6:	75 6c                	jne    401334 <get_date_time+0x88b>
  4012c8:	71 64                	jno    40132e <get_date_time+0x885>
  4012ca:	71 20                	jno    4012ec <get_date_time+0x843>
  4012cc:	73 75                	jae    401343 <get_date_time+0x89a>
  4012ce:	70 70                	jo     401340 <get_date_time+0x897>
  4012d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4012d1:	72 74                	jb     401347 <get_date_time+0x89e>
  4012d3:	3a 20                	cmp    ah,BYTE PTR [rax]
  4012d5:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
  4012d8:	78 20                	js     4012fa <get_date_time+0x851>
  4012da:	73 75                	jae    401351 <get_date_time+0x8a8>
  4012dc:	70 70                	jo     40134e <get_date_time+0x8a5>
  4012de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4012df:	72 74                	jb     401355 <get_date_time+0x8ac>
  4012e1:	3a 20                	cmp    ah,BYTE PTR [rax]
  4012e3:	00 66 31             	add    BYTE PTR [rsi+0x31],ah
  4012e6:	36 63 20             	movsxd esp,DWORD PTR ss:[rax]
  4012e9:	73 75                	jae    401360 <get_date_time+0x8b7>
  4012eb:	70 70                	jo     40135d <get_date_time+0x8b4>
  4012ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4012ee:	72 74                	jb     401364 <get_date_time+0x8bb>
  4012f0:	3a 20                	cmp    ah,BYTE PTR [rax]
  4012f2:	00 66 6d             	add    BYTE PTR [rsi+0x6d],ah
  4012f5:	61                   	(bad)  
  4012f6:	20 73 75             	and    BYTE PTR [rbx+0x75],dh
  4012f9:	70 70                	jo     40136b <get_date_time+0x8c2>
  4012fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4012fc:	72 74                	jb     401372 <get_date_time+0x8c9>
  4012fe:	3a 20                	cmp    ah,BYTE PTR [rax]
  401300:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
  401303:	78 32                	js     401337 <get_date_time+0x88e>
  401305:	20 73 75             	and    BYTE PTR [rbx+0x75],dh
  401308:	70 70                	jo     40137a <get_date_time+0x8d1>
  40130a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40130b:	72 74                	jb     401381 <get_date_time+0x8d8>
  40130d:	3a 20                	cmp    ah,BYTE PTR [rax]
  40130f:	00 76 70             	add    BYTE PTR [rsi+0x70],dh
  401312:	63 6c 6d 75          	movsxd ebp,DWORD PTR [rbp+rbp*2+0x75]
  401316:	6c                   	ins    BYTE PTR es:[rdi],dx
  401317:	71 64                	jno    40137d <get_date_time+0x8d4>
  401319:	71 20                	jno    40133b <get_date_time+0x892>
  40131b:	73 75                	jae    401392 <get_date_time+0x8e9>
  40131d:	70 70                	jo     40138f <get_date_time+0x8e6>
  40131f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  401320:	72 74                	jb     401396 <get_date_time+0x8ed>
  401322:	3a 20                	cmp    ah,BYTE PTR [rax]
  401324:	00 76 61             	add    BYTE PTR [rsi+0x61],dh
  401327:	65 73 6e             	gs jae 401398 <get_date_time+0x8ef>
  40132a:	69 20 73 75 70 70    	imul   esp,DWORD PTR [rax],0x70707573
  401330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  401331:	72 74                	jb     4013a7 <get_date_time+0x8fe>
  401333:	3a 20                	cmp    ah,BYTE PTR [rax]
  401335:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
  401338:	2e 0a 00             	or     al,BYTE PTR cs:[rax]
  40133b:	4d                   	rex.WRB
  40133c:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  40133e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40133f:	72 79                	jb     4013ba <get_date_time+0x911>
  401341:	20 64 75 6d          	and    BYTE PTR [rbp+rsi*2+0x6d],ah
  401345:	70 20                	jo     401367 <get_date_time+0x8be>
  401347:	61                   	(bad)  
  401348:	74 20                	je     40136a <get_date_time+0x8c1>
  40134a:	3a 20                	cmp    ah,BYTE PTR [rax]
  40134c:	30 78 00             	xor    BYTE PTR [rax+0x0],bh
  40134f:	57                   	push   rdi
  401350:	72 6f                	jb     4013c1 <get_date_time+0x918>
  401352:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  401353:	67 20 76 61          	and    BYTE PTR [esi+0x61],dh
  401357:	6c                   	ins    BYTE PTR es:[rdi],dx
  401358:	75 65                	jne    4013bf <get_date_time+0x916>
  40135a:	2e 0a 00             	or     al,BYTE PTR cs:[rax]
  40135d:	0a 00                	or     al,BYTE PTR [rax]
  40135f:	54                   	push   rsp
  401360:	69 6d 65 3a 20 00 20 	imul   ebp,DWORD PTR [rbp+0x65],0x2000203a
  401367:	28 55 54             	sub    BYTE PTR [rbp+0x54],dl
  40136a:	43 29 20             	rex.XB sub DWORD PTR [r8],esp
  40136d:	0a 44 61 74          	or     al,BYTE PTR [rcx+riz*2+0x74]
  401371:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
  401374:	00 3e                	add    BYTE PTR [rsi],bh
  401376:	3e 20 00             	and    BYTE PTR ds:[rax],al
  401379:	00 00                	add    BYTE PTR [rax],al
  40137b:	00 00                	add    BYTE PTR [rax],al
  40137d:	00 00                	add    BYTE PTR [rax],al
  40137f:	00 4e 6f             	add    BYTE PTR [rsi+0x6f],cl
  401382:	20 73 75             	and    BYTE PTR [rbx+0x75],dh
  401385:	63 68 20             	movsxd ebp,DWORD PTR [rax+0x20]
  401388:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  40138b:	6d                   	ins    DWORD PTR es:[rdi],dx
  40138c:	61                   	(bad)  
  40138d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40138e:	64 2e 20 52 75       	fs and BYTE PTR cs:[rdx+0x75],dl
  401393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  401394:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
  401397:	6d                   	ins    DWORD PTR es:[rdi],dx
  401398:	6d                   	ins    DWORD PTR es:[rdi],dx
  401399:	61                   	(bad)  
  40139a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40139b:	64 20 22             	and    BYTE PTR fs:[rdx],ah
  40139e:	61                   	(bad)  
  40139f:	79 75                	jns    401416 <get_date_time+0x96d>
  4013a1:	64 61                	fs (bad) 
  4013a3:	22 20                	and    ah,BYTE PTR [rax]
  4013a5:	74 6f                	je     401416 <get_date_time+0x96d>
  4013a7:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
  4013aa:	65 20 61 6c          	and    BYTE PTR gs:[rcx+0x6c],ah
  4013ae:	6c                   	ins    BYTE PTR es:[rdi],dx
  4013af:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
  4013b2:	6d                   	ins    DWORD PTR es:[rdi],dx
  4013b3:	6d                   	ins    DWORD PTR es:[rdi],dx
  4013b4:	61                   	(bad)  
  4013b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4013b6:	64 73 2e             	fs jae 4013e7 <get_date_time+0x93e>
  4013b9:	0a 00                	or     al,BYTE PTR [rax]

Disassembly of section .eh_frame:

00000000004013c0 <.eh_frame>:
  4013c0:	14 00                	adc    al,0x0
  4013c2:	00 00                	add    BYTE PTR [rax],al
  4013c4:	00 00                	add    BYTE PTR [rax],al
  4013c6:	00 00                	add    BYTE PTR [rax],al
  4013c8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4013cb:	00 01                	add    BYTE PTR [rcx],al
  4013cd:	78 10                	js     4013df <get_date_time+0x936>
  4013cf:	01 1b                	add    DWORD PTR [rbx],ebx
  4013d1:	0c 07                	or     al,0x7
  4013d3:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  4013d9:	00 00                	add    BYTE PTR [rax],al
  4013db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4013de:	00 00                	add    BYTE PTR [rax],al
  4013e0:	20 ec                	and    ah,ch
  4013e2:	ff                   	(bad)  
  4013e3:	ff 32                	push   QWORD PTR [rdx]
  4013e5:	00 00                	add    BYTE PTR [rax],al
  4013e7:	00 00                	add    BYTE PTR [rax],al
  4013e9:	41 0e                	rex.B (bad) 
  4013eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4013f1:	6d                   	ins    DWORD PTR es:[rdi],dx
  4013f2:	c6                   	(bad)  
  4013f3:	0c 07                	or     al,0x7
  4013f5:	08 00                	or     BYTE PTR [rax],al
  4013f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4013fa:	00 00                	add    BYTE PTR [rax],al
  4013fc:	3c 00                	cmp    al,0x0
  4013fe:	00 00                	add    BYTE PTR [rax],al
  401400:	32 ec                	xor    ch,ah
  401402:	ff                   	(bad)  
  401403:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
  401406:	00 00                	add    BYTE PTR [rax],al
  401408:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40140b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401411:	02 46 c6             	add    al,BYTE PTR [rsi-0x3a]
  401414:	0c 07                	or     al,0x7
  401416:	08 00                	or     BYTE PTR [rax],al
  401418:	1c 00                	sbb    al,0x0
  40141a:	00 00                	add    BYTE PTR [rax],al
  40141c:	5c                   	pop    rsp
  40141d:	00 00                	add    BYTE PTR [rax],al
  40141f:	00 5d ec             	add    BYTE PTR [rbp-0x14],bl
  401422:	ff                   	(bad)  
  401423:	ff 36                	push   QWORD PTR [rsi]
  401425:	00 00                	add    BYTE PTR [rax],al
  401427:	00 00                	add    BYTE PTR [rax],al
  401429:	41 0e                	rex.B (bad) 
  40142b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401431:	71 c6                	jno    4013f9 <get_date_time+0x950>
  401433:	0c 07                	or     al,0x7
  401435:	08 00                	or     BYTE PTR [rax],al
  401437:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40143a:	00 00                	add    BYTE PTR [rax],al
  40143c:	7c 00                	jl     40143e <get_date_time+0x995>
  40143e:	00 00                	add    BYTE PTR [rax],al
  401440:	73 ec                	jae    40142e <get_date_time+0x985>
  401442:	ff                   	(bad)  
  401443:	ff 73 00             	push   QWORD PTR [rbx+0x0]
  401446:	00 00                	add    BYTE PTR [rax],al
  401448:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40144b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401451:	02 6e c6             	add    ch,BYTE PTR [rsi-0x3a]
  401454:	0c 07                	or     al,0x7
  401456:	08 00                	or     BYTE PTR [rax],al
  401458:	1c 00                	sbb    al,0x0
  40145a:	00 00                	add    BYTE PTR [rax],al
  40145c:	9c                   	pushf  
  40145d:	00 00                	add    BYTE PTR [rax],al
  40145f:	00 c6                	add    dh,al
  401461:	ec                   	in     al,dx
  401462:	ff                   	(bad)  
  401463:	ff 2e                	jmp    FWORD PTR [rsi]
  401465:	00 00                	add    BYTE PTR [rax],al
  401467:	00 00                	add    BYTE PTR [rax],al
  401469:	41 0e                	rex.B (bad) 
  40146b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401471:	69 c6 0c 07 08 00    	imul   eax,esi,0x8070c
  401477:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40147a:	00 00                	add    BYTE PTR [rax],al
  40147c:	bc 00 00 00 d4       	mov    esp,0xd4000000
  401481:	ec                   	in     al,dx
  401482:	ff                   	(bad)  
  401483:	ff 2b                	jmp    FWORD PTR [rbx]
  401485:	00 00                	add    BYTE PTR [rax],al
  401487:	00 00                	add    BYTE PTR [rax],al
  401489:	41 0e                	rex.B (bad) 
  40148b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401491:	66 c6                	data16 (bad) 
  401493:	0c 07                	or     al,0x7
  401495:	08 00                	or     BYTE PTR [rax],al
  401497:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40149a:	00 00                	add    BYTE PTR [rax],al
  40149c:	dc 00                	fadd   QWORD PTR [rax]
  40149e:	00 00                	add    BYTE PTR [rax],al
  4014a0:	df ec                	fucomip st,st(4)
  4014a2:	ff                   	(bad)  
  4014a3:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 4014a9 <get_date_time+0xa00>
  4014a9:	41 0e                	rex.B (bad) 
  4014ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4014b1:	60                   	(bad)  
  4014b2:	c6                   	(bad)  
  4014b3:	0c 07                	or     al,0x7
  4014b5:	08 00                	or     BYTE PTR [rax],al
  4014b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4014ba:	00 00                	add    BYTE PTR [rax],al
  4014bc:	fc                   	cld    
  4014bd:	00 00                	add    BYTE PTR [rax],al
  4014bf:	00 e4                	add    ah,ah
  4014c1:	ec                   	in     al,dx
  4014c2:	ff                   	(bad)  
  4014c3:	ff 0b                	dec    DWORD PTR [rbx]
  4014c5:	00 00                	add    BYTE PTR [rax],al
  4014c7:	00 00                	add    BYTE PTR [rax],al
  4014c9:	41 0e                	rex.B (bad) 
  4014cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4014d1:	46 c6                	rex.RX (bad) 
  4014d3:	0c 07                	or     al,0x7
  4014d5:	08 00                	or     BYTE PTR [rax],al
  4014d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4014da:	00 00                	add    BYTE PTR [rax],al
  4014dc:	1c 01                	sbb    al,0x1
  4014de:	00 00                	add    BYTE PTR [rax],al
  4014e0:	cf                   	iret   
  4014e1:	ec                   	in     al,dx
  4014e2:	ff                   	(bad)  
  4014e3:	ff 56 00             	call   QWORD PTR [rsi+0x0]
  4014e6:	00 00                	add    BYTE PTR [rax],al
  4014e8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4014eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4014f1:	02 51 c6             	add    dl,BYTE PTR [rcx-0x3a]
  4014f4:	0c 07                	or     al,0x7
  4014f6:	08 00                	or     BYTE PTR [rax],al
  4014f8:	1c 00                	sbb    al,0x0
  4014fa:	00 00                	add    BYTE PTR [rax],al
  4014fc:	3c 01                	cmp    al,0x1
  4014fe:	00 00                	add    BYTE PTR [rax],al
  401500:	05 ed ff ff 0b       	add    eax,0xbffffed
  401505:	00 00                	add    BYTE PTR [rax],al
  401507:	00 00                	add    BYTE PTR [rax],al
  401509:	41 0e                	rex.B (bad) 
  40150b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401511:	46 c6                	rex.RX (bad) 
  401513:	0c 07                	or     al,0x7
  401515:	08 00                	or     BYTE PTR [rax],al
  401517:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40151a:	00 00                	add    BYTE PTR [rax],al
  40151c:	5c                   	pop    rsp
  40151d:	01 00                	add    DWORD PTR [rax],eax
  40151f:	00 f0                	add    al,dh
  401521:	ec                   	in     al,dx
  401522:	ff                   	(bad)  
  401523:	ff 0c 02             	dec    DWORD PTR [rdx+rax*1]
  401526:	00 00                	add    BYTE PTR [rax],al
  401528:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40152b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401531:	03 07                	add    eax,DWORD PTR [rdi]
  401533:	02 c6                	add    al,dh
  401535:	0c 07                	or     al,0x7
  401537:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  40153a:	00 00                	add    BYTE PTR [rax],al
  40153c:	7c 01                	jl     40153f <get_date_time+0xa96>
  40153e:	00 00                	add    BYTE PTR [rax],al
  401540:	dc ee                	fsub   st(6),st
  401542:	ff                   	(bad)  
  401543:	ff 41 00             	inc    DWORD PTR [rcx+0x0]
  401546:	00 00                	add    BYTE PTR [rax],al
  401548:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40154b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401551:	7c c6                	jl     401519 <get_date_time+0xa70>
  401553:	0c 07                	or     al,0x7
  401555:	08 00                	or     BYTE PTR [rax],al
  401557:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40155a:	00 00                	add    BYTE PTR [rax],al
  40155c:	9c                   	pushf  
  40155d:	01 00                	add    DWORD PTR [rax],eax
  40155f:	00 fd                	add    ch,bh
  401561:	ee                   	out    dx,al
  401562:	ff                   	(bad)  
  401563:	ff                   	(bad)  
  401564:	39 00                	cmp    DWORD PTR [rax],eax
  401566:	00 00                	add    BYTE PTR [rax],al
  401568:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40156b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401571:	74 c6                	je     401539 <get_date_time+0xa90>
  401573:	0c 07                	or     al,0x7
  401575:	08 00                	or     BYTE PTR [rax],al
  401577:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40157a:	00 00                	add    BYTE PTR [rax],al
  40157c:	bc 01 00 00 16       	mov    esp,0x16000001
  401581:	ef                   	out    dx,eax
  401582:	ff                   	(bad)  
  401583:	ff 1c 02             	call   FWORD PTR [rdx+rax*1]
  401586:	00 00                	add    BYTE PTR [rax],al
  401588:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40158b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401591:	03 17                	add    edx,DWORD PTR [rdi]
  401593:	02 c6                	add    al,dh
  401595:	0c 07                	or     al,0x7
  401597:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  40159a:	00 00                	add    BYTE PTR [rax],al
  40159c:	dc 01                	fadd   QWORD PTR [rcx]
  40159e:	00 00                	add    BYTE PTR [rax],al
  4015a0:	12 f1                	adc    dh,cl
  4015a2:	ff                   	(bad)  
  4015a3:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
  4015a6:	00 00                	add    BYTE PTR [rax],al
  4015a8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4015ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4015b1:	02 46 c6             	add    al,BYTE PTR [rsi-0x3a]
  4015b4:	0c 07                	or     al,0x7
  4015b6:	08 00                	or     BYTE PTR [rax],al
  4015b8:	1c 00                	sbb    al,0x0
  4015ba:	00 00                	add    BYTE PTR [rax],al
  4015bc:	fc                   	cld    
  4015bd:	01 00                	add    DWORD PTR [rax],eax
  4015bf:	00 3d f1 ff ff ac    	add    BYTE PTR [rip+0xffffffffacfffff1],bh        # ffffffffad4015b6 <bss+0xffffffffacffe5b6>
  4015c5:	00 00                	add    BYTE PTR [rax],al
  4015c7:	00 00                	add    BYTE PTR [rax],al
  4015c9:	41 0e                	rex.B (bad) 
  4015cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4015d1:	02 a7 c6 0c 07 08    	add    ah,BYTE PTR [rdi+0x8070cc6]
  4015d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4015da:	00 00                	add    BYTE PTR [rax],al
  4015dc:	1c 02                	sbb    al,0x2
  4015de:	00 00                	add    BYTE PTR [rax],al
  4015e0:	c9                   	leave  
  4015e1:	f1                   	icebp  
  4015e2:	ff                   	(bad)  
  4015e3:	ff ac 00 00 00 00 41 	jmp    FWORD PTR [rax+rax*1+0x41000000]
  4015ea:	0e                   	(bad)  
  4015eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4015f1:	02 a7 c6 0c 07 08    	add    ah,BYTE PTR [rdi+0x8070cc6]
  4015f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4015fa:	00 00                	add    BYTE PTR [rax],al
  4015fc:	3c 02                	cmp    al,0x2
  4015fe:	00 00                	add    BYTE PTR [rax],al
  401600:	55                   	push   rbp
  401601:	f2 ff                	repnz (bad) 
  401603:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
  401606:	00 00                	add    BYTE PTR [rax],al
  401608:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40160b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401611:	02 46 c6             	add    al,BYTE PTR [rsi-0x3a]
  401614:	0c 07                	or     al,0x7
  401616:	08 00                	or     BYTE PTR [rax],al
  401618:	1c 00                	sbb    al,0x0
  40161a:	00 00                	add    BYTE PTR [rax],al
  40161c:	5c                   	pop    rsp
  40161d:	02 00                	add    al,BYTE PTR [rax]
  40161f:	00 80 f2 ff ff 0b    	add    BYTE PTR [rax+0xbfffff2],al
  401625:	00 00                	add    BYTE PTR [rax],al
  401627:	00 00                	add    BYTE PTR [rax],al
  401629:	41 0e                	rex.B (bad) 
  40162b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401631:	46 c6                	rex.RX (bad) 
  401633:	0c 07                	or     al,0x7
  401635:	08 00                	or     BYTE PTR [rax],al
  401637:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40163a:	00 00                	add    BYTE PTR [rax],al
  40163c:	7c 02                	jl     401640 <get_date_time+0xb97>
  40163e:	00 00                	add    BYTE PTR [rax],al
  401640:	6b f2 ff             	imul   esi,edx,0xffffffff
  401643:	ff 0b                	dec    DWORD PTR [rbx]
  401645:	00 00                	add    BYTE PTR [rax],al
  401647:	00 00                	add    BYTE PTR [rax],al
  401649:	41 0e                	rex.B (bad) 
  40164b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401651:	46 c6                	rex.RX (bad) 
  401653:	0c 07                	or     al,0x7
  401655:	08 00                	or     BYTE PTR [rax],al
  401657:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40165a:	00 00                	add    BYTE PTR [rax],al
  40165c:	9c                   	pushf  
  40165d:	02 00                	add    al,BYTE PTR [rax]
  40165f:	00 56 f2             	add    BYTE PTR [rsi-0xe],dl
  401662:	ff                   	(bad)  
  401663:	ff 53 00             	call   QWORD PTR [rbx+0x0]
  401666:	00 00                	add    BYTE PTR [rax],al
  401668:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40166b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401671:	02 4e c6             	add    cl,BYTE PTR [rsi-0x3a]
  401674:	0c 07                	or     al,0x7
  401676:	08 00                	or     BYTE PTR [rax],al
  401678:	1c 00                	sbb    al,0x0
  40167a:	00 00                	add    BYTE PTR [rax],al
  40167c:	bc 02 00 00 89       	mov    esp,0x89000002
  401681:	f2 ff                	repnz (bad) 
  401683:	ff 82 00 00 00 00    	inc    DWORD PTR [rdx+0x0]
  401689:	41 0e                	rex.B (bad) 
  40168b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401691:	00 00                	add    BYTE PTR [rax],al
  401693:	00 00                	add    BYTE PTR [rax],al
  401695:	00 00                	add    BYTE PTR [rax],al
  401697:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40169a:	00 00                	add    BYTE PTR [rax],al
  40169c:	dc 02                	fadd   QWORD PTR [rdx]
  40169e:	00 00                	add    BYTE PTR [rax],al
  4016a0:	eb f2                	jmp    401694 <get_date_time+0xbeb>
  4016a2:	ff                   	(bad)  
  4016a3:	ff 53 00             	call   QWORD PTR [rbx+0x0]
  4016a6:	00 00                	add    BYTE PTR [rax],al
  4016a8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4016ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4016b1:	02 4e c6             	add    cl,BYTE PTR [rsi-0x3a]
  4016b4:	0c 07                	or     al,0x7
  4016b6:	08 00                	or     BYTE PTR [rax],al

Disassembly of section .data:

0000000000402000 <commands>:
  402000:	00 10                	add    BYTE PTR [rax],dl
  402002:	40 00 00             	add    BYTE PTR [rax],al
  402005:	00 00                	add    BYTE PTR [rax],al
  402007:	00 06                	add    BYTE PTR [rsi],al
  402009:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  40200c:	00 00                	add    BYTE PTR [rax],al
  40200e:	00 00                	add    BYTE PTR [rax],al
  402010:	0e                   	(bad)  
  402011:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  402014:	00 00                	add    BYTE PTR [rax],al
  402016:	00 00                	add    BYTE PTR [rax],al
  402018:	16                   	(bad)  
  402019:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  40201c:	00 00                	add    BYTE PTR [rax],al
  40201e:	00 00                	add    BYTE PTR [rax],al
  402020:	1e                   	(bad)  
  402021:	10 40 00             	adc    BYTE PTR [rax+0x0],al
  402024:	00 00                	add    BYTE PTR [rax],al
  402026:	00 00                	add    BYTE PTR [rax],al
  402028:	26 10 40 00          	adc    BYTE PTR es:[rax+0x0],al
  40202c:	00 00                	add    BYTE PTR [rax],al
  40202e:	00 00                	add    BYTE PTR [rax],al
  402030:	31 10                	xor    DWORD PTR [rax],edx
  402032:	40 00 00             	add    BYTE PTR [rax],al
	...

0000000000402040 <command_codes>:
  402040:	af                   	scas   eax,DWORD PTR es:[rdi]
  402041:	01 40 00             	add    DWORD PTR [rax+0x0],eax
  402044:	00 00                	add    BYTE PTR [rax],al
  402046:	00 00                	add    BYTE PTR [rax],al
  402048:	05 02 40 00 00       	add    eax,0x4002
  40204d:	00 00                	add    BYTE PTR [rax],al
  40204f:	00 10                	add    BYTE PTR [rax],dl
  402051:	02 40 00             	add    al,BYTE PTR [rax+0x0]
  402054:	00 00                	add    BYTE PTR [rax],al
  402056:	00 00                	add    BYTE PTR [rax],al
  402058:	a0 08 40 00 00 00 00 	movabs al,ds:0xab00000000004008
  40205f:	00 ab 
  402061:	08 40 00             	or     BYTE PTR [rax+0x0],al
  402064:	00 00                	add    BYTE PTR [rax],al
  402066:	00 00                	add    BYTE PTR [rax],al
  402068:	8b 09                	mov    ecx,DWORD PTR [rcx]
  40206a:	40 00 00             	add    BYTE PTR [rax],al
  40206d:	00 00                	add    BYTE PTR [rax],al
  40206f:	00 96 04 40 00 00    	add    BYTE PTR [rsi+0x4004],dl
  402075:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	2b 01                	sub    eax,DWORD PTR [rcx]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 01                	or     BYTE PTR [rcx],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	01 6d 01             	add    DWORD PTR [rbp+0x1],ebp
  13:	00 00                	add    BYTE PTR [rax],al
  15:	ca 00 00             	retf   0x0
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	00 40 00             	add    BYTE PTR [rax+0x0],al
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 00                	add    BYTE PTR [rax],al
  21:	7d 00                	jge    23 <_start-0x3fffdd>
	...
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	02 01                	add    al,BYTE PTR [rcx]
  2f:	06                   	(bad)  
  30:	f5                   	cmc    
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 02                	add    BYTE PTR [rdx],al
  35:	02 05 53 01 00 00    	add    al,BYTE PTR [rip+0x153]        # 18e <_start-0x3ffe72>
  3b:	03 97 02 00 00 02    	add    edx,DWORD PTR [rdi+0x2000002]
  41:	28 46 00             	sub    BYTE PTR [rsi+0x0],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	04 04                	add    al,0x4
  48:	05 69 6e 74 00       	add    eax,0x746e69
  4d:	02 08                	add    cl,BYTE PTR [rax]
  4f:	05 5d 01 00 00       	add    eax,0x15d
  54:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
  57:	00 00                	add    BYTE PTR [rax],al
  59:	02 2e                	add    ch,BYTE PTR [rsi]
  5b:	5f                   	pop    rdi
  5c:	00 00                	add    BYTE PTR [rax],al
  5e:	00 02                	add    BYTE PTR [rdx],al
  60:	01 08                	add    DWORD PTR [rax],ecx
  62:	f3 00 00             	repz add BYTE PTR [rax],al
  65:	00 02                	add    BYTE PTR [rdx],al
  67:	02 07                	add    al,BYTE PTR [rdi]
  69:	1f                   	(bad)  
  6a:	01 00                	add    DWORD PTR [rax],eax
  6c:	00 02                	add    BYTE PTR [rdx],al
  6e:	04 07                	add    al,0x7
  70:	12 01                	adc    al,BYTE PTR [rcx]
  72:	00 00                	add    BYTE PTR [rax],al
  74:	03 ea                	add    ebp,edx
  76:	00 00                	add    BYTE PTR [rax],al
  78:	00 02                	add    BYTE PTR [rdx],al
  7a:	37                   	(bad)  
  7b:	7f 00                	jg     7d <_start-0x3fff83>
  7d:	00 00                	add    BYTE PTR [rax],al
  7f:	02 08                	add    cl,BYTE PTR [rax]
  81:	07                   	(bad)  
  82:	0d 01 00 00 05       	or     eax,0x5000001
  87:	39 01                	cmp    DWORD PTR [rcx],eax
  89:	00 00                	add    BYTE PTR [rax],al
  8b:	01 0b                	add    DWORD PTR [rbx],ecx
  8d:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
  90:	00 00                	add    BYTE PTR [rax],al
  92:	00 40 00             	add    BYTE PTR [rax+0x0],al
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 00                	add    BYTE PTR [rax],al
  99:	32 00                	xor    al,BYTE PTR [rax]
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 00                	add    BYTE PTR [rax],al
  a1:	01 9c 06 32 01 00 00 	add    DWORD PTR [rsi+rax*1+0x132],ebx
  a8:	01 12                	add    DWORD PTR [rdx],edx
  aa:	09 01                	or     DWORD PTR [rcx],eax
  ac:	00 00                	add    BYTE PTR [rax],al
  ae:	32 00                	xor    al,BYTE PTR [rax]
  b0:	40 00 00             	add    BYTE PTR [rax],al
  b3:	00 00                	add    BYTE PTR [rax],al
  b5:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
  b8:	00 00                	add    BYTE PTR [rax],al
  ba:	00 00                	add    BYTE PTR [rax],al
  bc:	00 00                	add    BYTE PTR [rax],al
  be:	01 9c 09 01 00 00 07 	add    DWORD PTR [rcx+rcx*1+0x7000001],ebx
  c5:	40 01 00             	rex add DWORD PTR [rax],eax
  c8:	00 01                	add    BYTE PTR [rcx],al
  ca:	12 09                	adc    cl,BYTE PTR [rcx]
  cc:	01 00                	add    DWORD PTR [rax],eax
  ce:	00 02                	add    BYTE PTR [rdx],al
  d0:	91                   	xchg   ecx,eax
  d1:	58                   	pop    rax
  d2:	08 63 00             	or     BYTE PTR [rbx+0x0],ah
  d5:	01 12                	add    DWORD PTR [rdx],edx
  d7:	3b 00                	cmp    eax,DWORD PTR [rax]
  d9:	00 00                	add    BYTE PTR [rax],al
  db:	02 91 54 07 66 01    	add    dl,BYTE PTR [rcx+0x1660754]
  e1:	00 00                	add    BYTE PTR [rax],al
  e3:	01 12                	add    DWORD PTR [rdx],edx
  e5:	74 00                	je     e7 <_start-0x3fff19>
  e7:	00 00                	add    BYTE PTR [rax],al
  e9:	02 91 48 09 63 68    	add    dl,BYTE PTR [rcx+0x68630948]
  ef:	72 00                	jb     f1 <_start-0x3fff0f>
  f1:	01 13                	add    DWORD PTR [rbx],edx
  f3:	54                   	push   rsp
  f4:	00 00                	add    BYTE PTR [rax],al
  f6:	00 02                	add    BYTE PTR [rdx],al
  f8:	91                   	xchg   ecx,eax
  f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  fa:	09 64 73 74          	or     DWORD PTR [rbx+rsi*2+0x74],esp
  fe:	00 01                	add    BYTE PTR [rcx],al
 100:	14 0b                	adc    al,0xb
 102:	01 00                	add    DWORD PTR [rax],eax
 104:	00 02                	add    BYTE PTR [rdx],al
 106:	91                   	xchg   ecx,eax
 107:	60                   	(bad)  
 108:	00 0a                	add    BYTE PTR [rdx],cl
 10a:	08 0b                	or     BYTE PTR [rbx],cl
 10c:	08 11                	or     BYTE PTR [rcx],dl
 10e:	01 00                	add    DWORD PTR [rax],eax
 110:	00 02                	add    BYTE PTR [rdx],al
 112:	01 06                	add    DWORD PTR [rsi],eax
 114:	fc                   	cld    
 115:	00 00                	add    BYTE PTR [rax],al
 117:	00 0c 62             	add    BYTE PTR [rdx+riz*2],cl
 11a:	73 73                	jae    18f <_start-0x3ffe71>
 11c:	00 01                	add    BYTE PTR [rcx],al
 11e:	04 11                	add    al,0x11
 120:	01 00                	add    DWORD PTR [rax],eax
 122:	00 0d 01 01 00 00    	add    BYTE PTR [rip+0x101],cl        # 229 <_start-0x3ffdd7>
 128:	01 05 11 01 00 00    	add    DWORD PTR [rip+0x111],eax        # 23f <_start-0x3ffdc1>
 12e:	00 7b 01             	add    BYTE PTR [rbx+0x1],bh
 131:	00 00                	add    BYTE PTR [rax],al
 133:	04 00                	add    al,0x0
 135:	ca 00 00             	retf   0x0
 138:	00 08                	add    BYTE PTR [rax],cl
 13a:	01 00                	add    DWORD PTR [rax],eax
 13c:	00 00                	add    BYTE PTR [rax],al
 13e:	00 01                	add    BYTE PTR [rcx],al
 140:	7e 01                	jle    143 <_start-0x3ffebd>
 142:	00 00                	add    BYTE PTR [rax],al
 144:	ca 00 00             	retf   0x0
 147:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
 14a:	40 00 00             	add    BYTE PTR [rax],al
 14d:	00 00                	add    BYTE PTR [rax],al
 14f:	00 27                	add    BYTE PTR [rdi],ah
 151:	01 00                	add    DWORD PTR [rax],eax
 153:	00 00                	add    BYTE PTR [rax],al
 155:	00 00                	add    BYTE PTR [rax],al
 157:	00 86 00 00 00 02    	add    BYTE PTR [rsi+0x2000000],al
 15d:	08 05 5d 01 00 00    	or     BYTE PTR [rip+0x15d],al        # 2c0 <_start-0x3ffd40>
 163:	02 08                	add    cl,BYTE PTR [rax]
 165:	07                   	(bad)  
 166:	0d 01 00 00 03       	or     eax,0x3000001
 16b:	04 05                	add    al,0x5
 16d:	69 6e 74 00 02 01 06 	imul   ebp,DWORD PTR [rsi+0x74],0x6010200
 174:	f5                   	cmc    
 175:	00 00                	add    BYTE PTR [rax],al
 177:	00 02                	add    BYTE PTR [rdx],al
 179:	02 05 53 01 00 00    	add    al,BYTE PTR [rip+0x153]        # 2d2 <_start-0x3ffd2e>
 17f:	02 01                	add    al,BYTE PTR [rcx]
 181:	08 f3                	or     bl,dh
 183:	00 00                	add    BYTE PTR [rax],al
 185:	00 02                	add    BYTE PTR [rdx],al
 187:	02 07                	add    al,BYTE PTR [rdi]
 189:	1f                   	(bad)  
 18a:	01 00                	add    DWORD PTR [rax],eax
 18c:	00 02                	add    BYTE PTR [rdx],al
 18e:	04 07                	add    al,0x7
 190:	12 01                	adc    al,BYTE PTR [rcx]
 192:	00 00                	add    BYTE PTR [rax],al
 194:	02 08                	add    cl,BYTE PTR [rax]
 196:	07                   	(bad)  
 197:	aa                   	stos   BYTE PTR es:[rdi],al
 198:	01 00                	add    DWORD PTR [rax],eax
 19a:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
 19d:	01 00                	add    DWORD PTR [rax],eax
 19f:	00 01                	add    BYTE PTR [rcx],al
 1a1:	06                   	(bad)  
 1a2:	3b 00                	cmp    eax,DWORD PTR [rax]
 1a4:	00 00                	add    BYTE PTR [rax],al
 1a6:	7d 00                	jge    1a8 <_start-0x3ffe58>
 1a8:	40 00 00             	add    BYTE PTR [rax],al
 1ab:	00 00                	add    BYTE PTR [rax],al
 1ad:	00 36                	add    BYTE PTR [rsi],dh
 1af:	00 00                	add    BYTE PTR [rax],al
 1b1:	00 00                	add    BYTE PTR [rax],al
 1b3:	00 00                	add    BYTE PTR [rax],al
 1b5:	00 01                	add    BYTE PTR [rcx],al
 1b7:	9c                   	pushf  
 1b8:	a8 00                	test   al,0x0
 1ba:	00 00                	add    BYTE PTR [rax],al
 1bc:	05 73 74 72 00       	add    eax,0x727473
 1c1:	01 06                	add    DWORD PTR [rsi],eax
 1c3:	a8 00                	test   al,0x0
 1c5:	00 00                	add    BYTE PTR [rax],al
 1c7:	02 91 58 06 69 00    	add    dl,BYTE PTR [rcx+0x690658]
 1cd:	01 07                	add    DWORD PTR [rdi],eax
 1cf:	3b 00                	cmp    eax,DWORD PTR [rax]
 1d1:	00 00                	add    BYTE PTR [rax],al
 1d3:	02 91 6c 00 07 08    	add    dl,BYTE PTR [rcx+0x807006c]
 1d9:	ae                   	scas   al,BYTE PTR es:[rdi]
 1da:	00 00                	add    BYTE PTR [rax],al
 1dc:	00 08                	add    BYTE PTR [rax],cl
 1de:	b3 00                	mov    bl,0x0
 1e0:	00 00                	add    BYTE PTR [rax],al
 1e2:	02 01                	add    al,BYTE PTR [rcx]
 1e4:	06                   	(bad)  
 1e5:	fc                   	cld    
 1e6:	00 00                	add    BYTE PTR [rax],al
 1e8:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
 1eb:	01 00                	add    DWORD PTR [rax],eax
 1ed:	00 01                	add    BYTE PTR [rcx],al
 1ef:	0c 3b                	or     al,0x3b
 1f1:	00 00                	add    BYTE PTR [rax],al
 1f3:	00 b3 00 40 00 00    	add    BYTE PTR [rbx+0x4000],dh
 1f9:	00 00                	add    BYTE PTR [rax],al
 1fb:	00 73 00             	add    BYTE PTR [rbx+0x0],dh
 1fe:	00 00                	add    BYTE PTR [rax],al
 200:	00 00                	add    BYTE PTR [rax],al
 202:	00 00                	add    BYTE PTR [rax],al
 204:	01 9c f8 00 00 00 09 	add    DWORD PTR [rax+rdi*8+0x9000000],ebx
 20b:	89 01                	mov    DWORD PTR [rcx],eax
 20d:	00 00                	add    BYTE PTR [rax],al
 20f:	01 0c f8             	add    DWORD PTR [rax+rdi*8],ecx
 212:	00 00                	add    BYTE PTR [rax],al
 214:	00 02                	add    BYTE PTR [rdx],al
 216:	91                   	xchg   ecx,eax
 217:	68 09 8e 01 00       	push   0x18e09
 21c:	00 01                	add    BYTE PTR [rcx],al
 21e:	0c f8                	or     al,0xf8
 220:	00 00                	add    BYTE PTR [rax],al
 222:	00 02                	add    BYTE PTR [rdx],al
 224:	91                   	xchg   ecx,eax
 225:	60                   	(bad)  
 226:	00 07                	add    BYTE PTR [rdi],al
 228:	08 b3 00 00 00 0a    	or     BYTE PTR [rbx+0xa000000],dh
 22e:	b3 01                	mov    bl,0x1
 230:	00 00                	add    BYTE PTR [rax],al
 232:	01 12                	add    DWORD PTR [rdx],edx
 234:	26 01 40 00          	add    DWORD PTR es:[rax+0x0],eax
 238:	00 00                	add    BYTE PTR [rax],al
 23a:	00 00                	add    BYTE PTR [rax],al
 23c:	2e 00 00             	add    BYTE PTR cs:[rax],al
 23f:	00 00                	add    BYTE PTR [rax],al
 241:	00 00                	add    BYTE PTR [rax],al
 243:	00 01                	add    BYTE PTR [rcx],al
 245:	9c                   	pushf  
 246:	2a 01                	sub    al,BYTE PTR [rcx]
 248:	00 00                	add    BYTE PTR [rax],al
 24a:	05 73 74 72 00       	add    eax,0x727473
 24f:	01 12                	add    DWORD PTR [rdx],edx
 251:	a8 00                	test   al,0x0
 253:	00 00                	add    BYTE PTR [rax],al
 255:	02 91 68 00 0b 9b    	add    dl,BYTE PTR [rcx-0x64f4ff98]
 25b:	01 00                	add    DWORD PTR [rax],eax
 25d:	00 01                	add    BYTE PTR [rcx],al
 25f:	16                   	(bad)  
 260:	3b 00                	cmp    eax,DWORD PTR [rax]
 262:	00 00                	add    BYTE PTR [rax],al
 264:	54                   	push   rsp
 265:	01 40 00             	add    DWORD PTR [rax+0x0],eax
 268:	00 00                	add    BYTE PTR [rax],al
 26a:	00 00                	add    BYTE PTR [rax],al
 26c:	2b 00                	sub    eax,DWORD PTR [rax]
 26e:	00 00                	add    BYTE PTR [rax],al
 270:	00 00                	add    BYTE PTR [rax],al
 272:	00 00                	add    BYTE PTR [rax],al
 274:	01 9c 58 01 00 00 06 	add    DWORD PTR [rax+rbx*2+0x6000001],ebx
 27b:	63 00                	movsxd eax,DWORD PTR [rax]
 27d:	01 17                	add    DWORD PTR [rdi],edx
 27f:	b3 00                	mov    bl,0x0
 281:	00 00                	add    BYTE PTR [rax],al
 283:	02 91 6f 00 0c 93    	add    dl,BYTE PTR [rcx-0x6cf3ff91]
 289:	01 00                	add    DWORD PTR [rax],eax
 28b:	00 01                	add    BYTE PTR [rcx],al
 28d:	1c 7f                	sbb    al,0x7f
 28f:	01 40 00             	add    DWORD PTR [rax+0x0],eax
 292:	00 00                	add    BYTE PTR [rax],al
 294:	00 00                	add    BYTE PTR [rax],al
 296:	25 00 00 00 00       	and    eax,0x0
 29b:	00 00                	add    BYTE PTR [rax],al
 29d:	00 01                	add    BYTE PTR [rcx],al
 29f:	9c                   	pushf  
 2a0:	05 63 00 01 1c       	add    eax,0x1c010063
 2a5:	b3 00                	mov    bl,0x0
 2a7:	00 00                	add    BYTE PTR [rax],al
 2a9:	02 91 6c 00 00 4e    	add    dl,BYTE PTR [rcx+0x4e00006c]
 2af:	00 00                	add    BYTE PTR [rax],al
 2b1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 2b4:	99                   	cdq    
 2b5:	01 00                	add    DWORD PTR [rax],eax
 2b7:	00 08                	add    BYTE PTR [rax],cl
 2b9:	01 00                	add    DWORD PTR [rax],eax
 2bb:	00 00                	add    BYTE PTR [rax],al
 2bd:	00 01                	add    BYTE PTR [rcx],al
 2bf:	ba 01 00 00 ca       	mov    edx,0xca000001
 2c4:	00 00                	add    BYTE PTR [rax],al
 2c6:	00 a4 01 40 00 00 00 	add    BYTE PTR [rcx+rax*1+0x40],ah
 2cd:	00 00                	add    BYTE PTR [rax],al
 2cf:	0b 00                	or     eax,DWORD PTR [rax]
 2d1:	00 00                	add    BYTE PTR [rax],al
 2d3:	00 00                	add    BYTE PTR [rax],al
 2d5:	00 00                	add    BYTE PTR [rax],al
 2d7:	f3 00 00             	repz add BYTE PTR [rax],al
 2da:	00 02                	add    BYTE PTR [rdx],al
 2dc:	cd 01                	int    0x1
 2de:	00 00                	add    BYTE PTR [rax],al
 2e0:	01 04 4a             	add    DWORD PTR [rdx+rcx*2],eax
 2e3:	00 00                	add    BYTE PTR [rax],al
 2e5:	00 a4 01 40 00 00 00 	add    BYTE PTR [rcx+rax*1+0x40],ah
 2ec:	00 00                	add    BYTE PTR [rax],al
 2ee:	0b 00                	or     eax,DWORD PTR [rax]
 2f0:	00 00                	add    BYTE PTR [rax],al
 2f2:	00 00                	add    BYTE PTR [rax],al
 2f4:	00 00                	add    BYTE PTR [rax],al
 2f6:	01 9c 03 04 05 69 6e 	add    DWORD PTR [rbx+rax*1+0x6e690504],ebx
 2fd:	74 00                	je     2ff <_start-0x3ffd01>
 2ff:	00 e7                	add    bh,ah
 301:	04 00                	add    al,0x0
 303:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 306:	d0 01                	rol    BYTE PTR [rcx],1
 308:	00 00                	add    BYTE PTR [rax],al
 30a:	08 01                	or     BYTE PTR [rcx],al
 30c:	00 00                	add    BYTE PTR [rax],al
 30e:	00 00                	add    BYTE PTR [rax],al
 310:	01 eb                	add    ebx,ebp
 312:	01 00                	add    DWORD PTR [rax],eax
 314:	00 ca                	add    dl,cl
 316:	00 00                	add    BYTE PTR [rax],al
 318:	00 af 01 40 00 00    	add    BYTE PTR [rdi+0x4001],ch
 31e:	00 00                	add    BYTE PTR [rax],al
 320:	00 2f                	add    BYTE PTR [rdi],ch
 322:	08 00                	or     BYTE PTR [rax],al
 324:	00 00                	add    BYTE PTR [rax],al
 326:	00 00                	add    BYTE PTR [rax],al
 328:	00 39                	add    BYTE PTR [rcx],bh
 32a:	01 00                	add    DWORD PTR [rax],eax
 32c:	00 02                	add    BYTE PTR [rdx],al
 32e:	08 05 5d 01 00 00    	or     BYTE PTR [rip+0x15d],al        # 491 <_start-0x3ffb6f>
 334:	02 08                	add    cl,BYTE PTR [rax]
 336:	07                   	(bad)  
 337:	0d 01 00 00 03       	or     eax,0x3000001
 33c:	04 05                	add    al,0x5
 33e:	69 6e 74 00 02 01 06 	imul   ebp,DWORD PTR [rsi+0x74],0x6010200
 345:	f5                   	cmc    
 346:	00 00                	add    BYTE PTR [rax],al
 348:	00 02                	add    BYTE PTR [rdx],al
 34a:	02 05 53 01 00 00    	add    al,BYTE PTR [rip+0x153]        # 4a3 <_start-0x3ffb5d>
 350:	04 4b                	add    al,0x4b
 352:	01 00                	add    DWORD PTR [rax],eax
 354:	00 02                	add    BYTE PTR [rdx],al
 356:	2e 5b                	cs pop rbx
 358:	00 00                	add    BYTE PTR [rax],al
 35a:	00 02                	add    BYTE PTR [rdx],al
 35c:	01 08                	add    DWORD PTR [rax],ecx
 35e:	f3 00 00             	repz add BYTE PTR [rax],al
 361:	00 02                	add    BYTE PTR [rdx],al
 363:	02 07                	add    al,BYTE PTR [rdi]
 365:	1f                   	(bad)  
 366:	01 00                	add    DWORD PTR [rax],eax
 368:	00 04 96             	add    BYTE PTR [rsi+rdx*4],al
 36b:	02 00                	add    al,BYTE PTR [rax]
 36d:	00 02                	add    BYTE PTR [rdx],al
 36f:	34 74                	xor    al,0x74
 371:	00 00                	add    BYTE PTR [rax],al
 373:	00 02                	add    BYTE PTR [rdx],al
 375:	04 07                	add    al,0x7
 377:	12 01                	adc    al,BYTE PTR [rcx]
 379:	00 00                	add    BYTE PTR [rax],al
 37b:	04 ea                	add    al,0xea
 37d:	00 00                	add    BYTE PTR [rax],al
 37f:	00 02                	add    BYTE PTR [rdx],al
 381:	37                   	(bad)  
 382:	34 00                	xor    al,0x0
 384:	00 00                	add    BYTE PTR [rax],al
 386:	04 19                	add    al,0x19
 388:	02 00                	add    al,BYTE PTR [rax]
 38a:	00 01                	add    BYTE PTR [rcx],al
 38c:	08 91 00 00 00 05    	or     BYTE PTR [rcx+0x5000000],dl
 392:	08 97 00 00 00 06    	or     BYTE PTR [rdi+0x6000000],dl
 398:	07                   	(bad)  
 399:	13 02                	adc    eax,DWORD PTR [rdx]
 39b:	00 00                	add    BYTE PTR [rax],al
 39d:	01 0f                	add    DWORD PTR [rdi],ecx
 39f:	af                   	scas   eax,DWORD PTR es:[rdi]
 3a0:	01 40 00             	add    DWORD PTR [rax+0x0],eax
 3a3:	00 00                	add    BYTE PTR [rax],al
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	56                   	push   rsi
 3a8:	00 00                	add    BYTE PTR [rax],al
 3aa:	00 00                	add    BYTE PTR [rax],al
 3ac:	00 00                	add    BYTE PTR [rax],al
 3ae:	00 01                	add    BYTE PTR [rcx],al
 3b0:	9c                   	pushf  
 3b1:	07                   	(bad)  
 3b2:	fb                   	sti    
 3b3:	01 00                	add    DWORD PTR [rax],eax
 3b5:	00 01                	add    BYTE PTR [rcx],al
 3b7:	1b 05 02 40 00 00    	sbb    eax,DWORD PTR [rip+0x4002]        # 43bf <_start-0x3fbc41>
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 0b                	add    BYTE PTR [rbx],cl
 3c1:	00 00                	add    BYTE PTR [rax],al
 3c3:	00 00                	add    BYTE PTR [rax],al
 3c5:	00 00                	add    BYTE PTR [rax],al
 3c7:	00 01                	add    BYTE PTR [rcx],al
 3c9:	9c                   	pushf  
 3ca:	08 9f 02 00 00 01    	or     BYTE PTR [rdi+0x1000002],bl
 3d0:	1f                   	(bad)  
 3d1:	10 02                	adc    BYTE PTR [rdx],al
 3d3:	40 00 00             	add    BYTE PTR [rax],al
 3d6:	00 00                	add    BYTE PTR [rax],al
 3d8:	00 0c 02             	add    BYTE PTR [rdx+rax*1],cl
 3db:	00 00                	add    BYTE PTR [rax],al
 3dd:	00 00                	add    BYTE PTR [rax],al
 3df:	00 00                	add    BYTE PTR [rax],al
 3e1:	01 9c 31 01 00 00 09 	add    DWORD PTR [rcx+rsi*1+0x9000001],ebx
 3e8:	2f                   	(bad)  
 3e9:	02 40 00             	add    al,BYTE PTR [rax+0x0]
 3ec:	00 00                	add    BYTE PTR [rax],al
 3ee:	00 00                	add    BYTE PTR [rax],al
 3f0:	de 01                	fiadd  WORD PTR [rcx]
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	00 00                	add    BYTE PTR [rax],al
 3f6:	00 00                	add    BYTE PTR [rax],al
 3f8:	0a 65 63             	or     ah,BYTE PTR [rbp+0x63]
 3fb:	78 00                	js     3fd <_start-0x3ffc03>
 3fd:	01 23                	add    DWORD PTR [rbx],esp
 3ff:	69 00 00 00 02 91    	imul   eax,DWORD PTR [rax],0x91020000
 405:	6c                   	ins    BYTE PTR es:[rdi],dx
 406:	0a 65 64             	or     ah,BYTE PTR [rbp+0x64]
 409:	78 00                	js     40b <_start-0x3ffbf5>
 40b:	01 23                	add    DWORD PTR [rbx],esp
 40d:	69 00 00 00 02 91    	imul   eax,DWORD PTR [rax],0x91020000
 413:	68 0a 65 62 78       	push   0x7862650a
 418:	00 01                	add    BYTE PTR [rcx],al
 41a:	23 69 00             	and    ebp,DWORD PTR [rcx+0x0]
 41d:	00 00                	add    BYTE PTR [rax],al
 41f:	02 91 64 0b 3e 02    	add    dl,BYTE PTR [rcx+0x23e0b64]
 425:	00 00                	add    BYTE PTR [rax],al
 427:	01 27                	add    DWORD PTR [rdi],esp
 429:	3b 00                	cmp    eax,DWORD PTR [rax]
 42b:	00 00                	add    BYTE PTR [rax],al
 42d:	0c 00                	or     al,0x0
 42f:	00 00                	add    BYTE PTR [rax],al
 431:	0d 3e 02 00 00       	or     eax,0x23e
 436:	01 4e 1c             	add    DWORD PTR [rsi+0x1c],ecx
 439:	04 40                	add    al,0x40
 43b:	00 00                	add    BYTE PTR [rax],al
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 41 00             	add    BYTE PTR [rcx+0x0],al
 442:	00 00                	add    BYTE PTR [rax],al
 444:	00 00                	add    BYTE PTR [rax],al
 446:	00 00                	add    BYTE PTR [rax],al
 448:	01 9c 6b 01 00 00 0e 	add    DWORD PTR [rbx+rbp*2+0xe000001],ebx
 44f:	72 65                	jb     4b6 <_start-0x3ffb4a>
 451:	67 00 01             	add    BYTE PTR [ecx],al
 454:	4e 7b 00             	rex.WRX jnp 457 <_start-0x3ffba9>
 457:	00 00                	add    BYTE PTR [rax],al
 459:	02 91 68 0f e5 01    	add    dl,BYTE PTR [rcx+0x1e50f68]
 45f:	00 00                	add    BYTE PTR [rax],al
 461:	01 4e 6b             	add    DWORD PTR [rsi+0x6b],ecx
 464:	01 00                	add    DWORD PTR [rax],eax
 466:	00 02                	add    BYTE PTR [rdx],al
 468:	91                   	xchg   ecx,eax
 469:	64 00 02             	add    BYTE PTR fs:[rdx],al
 46c:	01 06                	add    DWORD PTR [rsi],eax
 46e:	fc                   	cld    
 46f:	00 00                	add    BYTE PTR [rax],al
 471:	00 10                	add    BYTE PTR [rax],dl
 473:	70 6f                	jo     4e4 <_start-0x3ffb1c>
 475:	77 00                	ja     477 <_start-0x3ffb89>
 477:	01 55 7b             	add    DWORD PTR [rbp+0x7b],edx
 47a:	00 00                	add    BYTE PTR [rax],al
 47c:	00 5d 04             	add    BYTE PTR [rbp+0x4],bl
 47f:	40 00 00             	add    BYTE PTR [rax],al
 482:	00 00                	add    BYTE PTR [rax],al
 484:	00 39                	add    BYTE PTR [rcx],bh
 486:	00 00                	add    BYTE PTR [rax],al
 488:	00 00                	add    BYTE PTR [rax],al
 48a:	00 00                	add    BYTE PTR [rax],al
 48c:	00 01                	add    BYTE PTR [rcx],al
 48e:	9c                   	pushf  
 48f:	ba 01 00 00 0e       	mov    edx,0xe000001
 494:	61                   	(bad)  
 495:	00 01                	add    BYTE PTR [rcx],al
 497:	55                   	push   rbp
 498:	7b 00                	jnp    49a <_start-0x3ffb66>
 49a:	00 00                	add    BYTE PTR [rax],al
 49c:	02 91 58 0e 62 00    	add    dl,BYTE PTR [rcx+0x620e58]
 4a2:	01 55 7b             	add    DWORD PTR [rbp+0x7b],edx
 4a5:	00 00                	add    BYTE PTR [rax],al
 4a7:	00 02                	add    BYTE PTR [rdx],al
 4a9:	91                   	xchg   ecx,eax
 4aa:	50                   	push   rax
 4ab:	0a 61 75             	or     ah,BYTE PTR [rcx+0x75]
 4ae:	78 00                	js     4b0 <_start-0x3ffb50>
 4b0:	01 56 7b             	add    DWORD PTR [rsi+0x7b],edx
 4b3:	00 00                	add    BYTE PTR [rax],al
 4b5:	00 02                	add    BYTE PTR [rdx],al
 4b7:	91                   	xchg   ecx,eax
 4b8:	68 00 08 5c 02       	push   0x25c0800
 4bd:	00 00                	add    BYTE PTR [rax],al
 4bf:	01 5d 96             	add    DWORD PTR [rbp-0x6a],ebx
 4c2:	04 40                	add    al,0x40
 4c4:	00 00                	add    BYTE PTR [rax],al
 4c6:	00 00                	add    BYTE PTR [rax],al
 4c8:	00 1c 02             	add    BYTE PTR [rdx+rax*1],bl
 4cb:	00 00                	add    BYTE PTR [rax],al
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 00                	add    BYTE PTR [rax],al
 4d1:	01 9c 38 02 00 00 0a 	add    DWORD PTR [rax+rdi*1+0xa000002],ebx
 4d8:	62                   	(bad)  
 4d9:	75 66                	jne    541 <_start-0x3ffabf>
 4db:	00 01                	add    BYTE PTR [rcx],al
 4dd:	5f                   	pop    rdi
 4de:	38 02                	cmp    BYTE PTR [rdx],al
 4e0:	00 00                	add    BYTE PTR [rax],al
 4e2:	03 91 be 7f 0a 69    	add    edx,DWORD PTR [rcx+0x690a7fbe]
 4e8:	00 01                	add    BYTE PTR [rcx],al
 4ea:	60                   	(bad)  
 4eb:	3b 00                	cmp    eax,DWORD PTR [rax]
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	02 91 6c 0a 63 00    	add    dl,BYTE PTR [rcx+0x630a6c]
 4f5:	01 61 6b             	add    DWORD PTR [rcx+0x6b],esp
 4f8:	01 00                	add    DWORD PTR [rax],eax
 4fa:	00 02                	add    BYTE PTR [rdx],al
 4fc:	91                   	xchg   ecx,eax
 4fd:	4f 0a 70 6f          	rex.WRXB or r14b,BYTE PTR [r8+0x6f]
 501:	73 00                	jae    503 <_start-0x3ffafd>
 503:	01 6e 7b             	add    DWORD PTR [rsi+0x7b],ebp
 506:	00 00                	add    BYTE PTR [rax],al
 508:	00 02                	add    BYTE PTR [rdx],al
 50a:	91                   	xchg   ecx,eax
 50b:	60                   	(bad)  
 50c:	0a 61 75             	or     ah,BYTE PTR [rcx+0x75]
 50f:	78 00                	js     511 <_start-0x3ffaef>
 511:	01 6e 7b             	add    DWORD PTR [rsi+0x7b],ebp
 514:	00 00                	add    BYTE PTR [rax],al
 516:	00 02                	add    BYTE PTR [rdx],al
 518:	91                   	xchg   ecx,eax
 519:	58                   	pop    rax
 51a:	0a 6c 65 6e          	or     ch,BYTE PTR [rbp+riz*2+0x6e]
 51e:	00 01                	add    BYTE PTR [rcx],al
 520:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 521:	7b 00                	jnp    523 <_start-0x3ffadd>
 523:	00 00                	add    BYTE PTR [rax],al
 525:	02 91 50 0a 6d 65    	add    dl,BYTE PTR [rcx+0x656d0a50]
 52b:	6d                   	ins    DWORD PTR es:[rdi],dx
 52c:	00 01                	add    BYTE PTR [rcx],al
 52e:	80 4f 02 00          	or     BYTE PTR [rdi+0x2],0x0
 532:	00 03                	add    BYTE PTR [rbx],al
 534:	91                   	xchg   ecx,eax
 535:	fe                   	(bad)  
 536:	7e 00                	jle    538 <_start-0x3ffac8>
 538:	11 6b 01             	adc    DWORD PTR [rbx+0x1],ebp
 53b:	00 00                	add    BYTE PTR [rax],al
 53d:	48 02 00             	rex.W add al,BYTE PTR [rax]
 540:	00 12                	add    BYTE PTR [rdx],dl
 542:	48 02 00             	rex.W add al,BYTE PTR [rax]
 545:	00 10                	add    BYTE PTR [rax],dl
 547:	00 02                	add    BYTE PTR [rdx],al
 549:	08 07                	or     BYTE PTR [rdi],al
 54b:	aa                   	stos   BYTE PTR es:[rdi],al
 54c:	01 00                	add    DWORD PTR [rax],eax
 54e:	00 11                	add    BYTE PTR [rcx],dl
 550:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
 553:	00 5f 02             	add    BYTE PTR [rdi+0x2],bl
 556:	00 00                	add    BYTE PTR [rax],al
 558:	12 48 02             	adc    cl,BYTE PTR [rax+0x2]
 55b:	00 00                	add    BYTE PTR [rax],al
 55d:	3f                   	(bad)  
 55e:	00 13                	add    BYTE PTR [rbx],dl
 560:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 561:	02 00                	add    al,BYTE PTR [rax]
 563:	00 01                	add    BYTE PTR [rcx],al
 565:	86 3b                	xchg   BYTE PTR [rbx],bh
 567:	00 00                	add    BYTE PTR [rax],al
 569:	00 b2 06 40 00 00    	add    BYTE PTR [rdx+0x4006],dh
 56f:	00 00                	add    BYTE PTR [rax],al
 571:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
 574:	00 00                	add    BYTE PTR [rax],al
 576:	00 00                	add    BYTE PTR [rax],al
 578:	00 00                	add    BYTE PTR [rax],al
 57a:	01 9c 9d 02 00 00 0f 	add    DWORD PTR [rbp+rbx*4+0xf000002],ebx
 581:	89 02                	mov    DWORD PTR [rdx],eax
 583:	00 00                	add    BYTE PTR [rax],al
 585:	01 86 9d 02 00 00    	add    DWORD PTR [rsi+0x29d],eax
 58b:	02 91 58 0a 69 64    	add    dl,BYTE PTR [rcx+0x64690a58]
 591:	78 00                	js     593 <_start-0x3ffa6d>
 593:	01 87 3b 00 00 00    	add    DWORD PTR [rdi+0x3b],eax
 599:	02 91 6c 00 05 08    	add    dl,BYTE PTR [rcx+0x805006c]
 59f:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
 5a2:	00 0d 78 02 00 00    	add    BYTE PTR [rip+0x278],cl        # 820 <_start-0x3ff7e0>
 5a8:	01 90 fd 06 40 00    	add    DWORD PTR [rax+0x4006fd],edx
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	00 00                	add    BYTE PTR [rax],al
 5b2:	ac                   	lods   al,BYTE PTR ds:[rsi]
 5b3:	00 00                	add    BYTE PTR [rax],al
 5b5:	00 00                	add    BYTE PTR [rax],al
 5b7:	00 00                	add    BYTE PTR [rax],al
 5b9:	00 01                	add    BYTE PTR [rcx],al
 5bb:	9c                   	pushf  
 5bc:	e7 02                	out    0x2,eax
 5be:	00 00                	add    BYTE PTR [rax],al
 5c0:	0f 89 02 00 00 01    	jns    10005c8 <bss+0xbfd5c8>
 5c6:	90                   	nop
 5c7:	9d                   	popf   
 5c8:	02 00                	add    al,BYTE PTR [rax]
 5ca:	00 02                	add    BYTE PTR [rdx],al
 5cc:	91                   	xchg   ecx,eax
 5cd:	58                   	pop    rax
 5ce:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
 5d1:	01 91 3b 00 00 00    	add    DWORD PTR [rcx+0x3b],edx
 5d7:	02 91 6c 0a 63 00    	add    dl,BYTE PTR [rcx+0x630a6c]
 5dd:	01 92 5b 00 00 00    	add    DWORD PTR [rdx+0x5b],edx
 5e3:	02 91 6b 00 0d 90    	add    dl,BYTE PTR [rcx-0x6ff2ff95]
 5e9:	02 00                	add    al,BYTE PTR [rax]
 5eb:	00 01                	add    BYTE PTR [rcx],al
 5ed:	a3 a9 07 40 00 00 00 	movabs ds:0x4007a9,eax
 5f4:	00 00 
 5f6:	ac                   	lods   al,BYTE PTR ds:[rsi]
 5f7:	00 00                	add    BYTE PTR [rax],al
 5f9:	00 00                	add    BYTE PTR [rax],al
 5fb:	00 00                	add    BYTE PTR [rax],al
 5fd:	00 01                	add    BYTE PTR [rcx],al
 5ff:	9c                   	pushf  
 600:	2b 03                	sub    eax,DWORD PTR [rbx]
 602:	00 00                	add    BYTE PTR [rax],al
 604:	0f 89 02 00 00 01    	jns    100060c <bss+0xbfd60c>
 60a:	a3 9d 02 00 00 02 91 	movabs ds:0xa5891020000029d,eax
 611:	58 0a 
 613:	69 00 01 a4 3b 00    	imul   eax,DWORD PTR [rax],0x3ba401
 619:	00 00                	add    BYTE PTR [rax],al
 61b:	02 91 6c 0a 63 00    	add    dl,BYTE PTR [rcx+0x630a6c]
 621:	01 a5 5b 00 00 00    	add    DWORD PTR [rbp+0x5b],esp
 627:	02 91 6b 00 13 48    	add    dl,BYTE PTR [rcx+0x4813006b]
 62d:	02 00                	add    al,BYTE PTR [rax]
 62f:	00 01                	add    BYTE PTR [rcx],al
 631:	b6 3b                	mov    dh,0x3b
 633:	00 00                	add    BYTE PTR [rax],al
 635:	00 55 08             	add    BYTE PTR [rbp+0x8],dl
 638:	40 00 00             	add    BYTE PTR [rax],al
 63b:	00 00                	add    BYTE PTR [rax],al
 63d:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
 640:	00 00                	add    BYTE PTR [rax],al
 642:	00 00                	add    BYTE PTR [rax],al
 644:	00 00                	add    BYTE PTR [rax],al
 646:	01 9c 69 03 00 00 0f 	add    DWORD PTR [rcx+rbp*2+0xf000003],ebx
 64d:	89 02                	mov    DWORD PTR [rdx],eax
 64f:	00 00                	add    BYTE PTR [rax],al
 651:	01 b6 9d 02 00 00    	add    DWORD PTR [rsi+0x29d],esi
 657:	02 91 58 0a 69 64    	add    dl,BYTE PTR [rcx+0x64690a58]
 65d:	78 00                	js     65f <_start-0x3ff9a1>
 65f:	01 b7 3b 00 00 00    	add    DWORD PTR [rdi+0x3b],esi
 665:	02 91 6c 00 07 f3    	add    dl,BYTE PTR [rcx-0xcf8ff94]
 66b:	01 00                	add    DWORD PTR [rax],eax
 66d:	00 01                	add    BYTE PTR [rcx],al
 66f:	c0 a0 08 40 00 00 00 	shl    BYTE PTR [rax+0x4008],0x0
 676:	00 00                	add    BYTE PTR [rax],al
 678:	0b 00                	or     eax,DWORD PTR [rax]
 67a:	00 00                	add    BYTE PTR [rax],al
 67c:	00 00                	add    BYTE PTR [rax],al
 67e:	00 00                	add    BYTE PTR [rax],al
 680:	01 9c 07 03 02 00 00 	add    DWORD PTR [rdi+rax*1+0x203],ebx
 687:	01 c4                	add    esp,eax
 689:	ab                   	stos   DWORD PTR es:[rdi],eax
 68a:	08 40 00             	or     BYTE PTR [rax+0x0],al
 68d:	00 00                	add    BYTE PTR [rax],al
 68f:	00 00                	add    BYTE PTR [rax],al
 691:	0b 00                	or     eax,DWORD PTR [rax]
 693:	00 00                	add    BYTE PTR [rax],al
 695:	00 00                	add    BYTE PTR [rax],al
 697:	00 00                	add    BYTE PTR [rax],al
 699:	01 9c 08 d2 01 00 00 	add    DWORD PTR [rax+rcx*1+0x1d2],ebx
 6a0:	01 c8                	add    eax,ecx
 6a2:	b6 08                	mov    dh,0x8
 6a4:	40 00 00             	add    BYTE PTR [rax],al
 6a7:	00 00                	add    BYTE PTR [rax],al
 6a9:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
 6ac:	00 00                	add    BYTE PTR [rax],al
 6ae:	00 00                	add    BYTE PTR [rax],al
 6b0:	00 00                	add    BYTE PTR [rax],al
 6b2:	01 9c d5 03 00 00 14 	add    DWORD PTR [rbp+rdx*8+0x14000003],ebx
 6b9:	dd 01                	fld    QWORD PTR [rcx]
 6bb:	00 00                	add    BYTE PTR [rax],al
 6bd:	01 c9                	add    ecx,ecx
 6bf:	d5                   	(bad)  
 6c0:	03 00                	add    eax,DWORD PTR [rax]
 6c2:	00 02                	add    BYTE PTR [rdx],al
 6c4:	91                   	xchg   ecx,eax
 6c5:	67 14 0b             	addr32 adc al,0xb
 6c8:	02 00                	add    al,BYTE PTR [rax]
 6ca:	00 01                	add    BYTE PTR [rcx],al
 6cc:	ca d5 03             	retf   0x3d5
 6cf:	00 00                	add    BYTE PTR [rax],al
 6d1:	02 91 5e 00 11 6b    	add    dl,BYTE PTR [rcx+0x6b11005e]
 6d7:	01 00                	add    DWORD PTR [rax],eax
 6d9:	00 e5                	add    ch,ah
 6db:	03 00                	add    eax,DWORD PTR [rax]
 6dd:	00 12                	add    BYTE PTR [rdx],dl
 6df:	48 02 00             	rex.W add al,BYTE PTR [rax]
 6e2:	00 08                	add    BYTE PTR [rax],cl
 6e4:	00 13                	add    BYTE PTR [rbx],dl
 6e6:	65 02 00             	add    al,BYTE PTR gs:[rax]
 6e9:	00 01                	add    BYTE PTR [rcx],al
 6eb:	d5                   	(bad)  
 6ec:	3b 00                	cmp    eax,DWORD PTR [rax]
 6ee:	00 00                	add    BYTE PTR [rax],al
 6f0:	09 09                	or     DWORD PTR [rcx],ecx
 6f2:	40 00 00             	add    BYTE PTR [rax],al
 6f5:	00 00                	add    BYTE PTR [rax],al
 6f7:	00 82 00 00 00 00    	add    BYTE PTR [rdx+0x0],al
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 01                	add    BYTE PTR [rcx],al
 701:	9c                   	pushf  
 702:	56                   	push   rsi
 703:	04 00                	add    al,0x0
 705:	00 14 89             	add    BYTE PTR [rcx+rcx*4],dl
 708:	02 00                	add    al,BYTE PTR [rax]
 70a:	00 01                	add    BYTE PTR [rcx],al
 70c:	d7                   	xlat   BYTE PTR ds:[rbx]
 70d:	56                   	push   rsi
 70e:	04 00                	add    al,0x0
 710:	00 03                	add    BYTE PTR [rbx],al
 712:	91                   	xchg   ecx,eax
 713:	e0 7d                	loopne 792 <_start-0x3ff86e>
 715:	09 35 09 40 00 00    	or     DWORD PTR [rip+0x4009],esi        # 4724 <_start-0x3fb8dc>
 71b:	00 00                	add    BYTE PTR [rax],al
 71d:	00 54 00 00          	add    BYTE PTR [rax+rax*1+0x0],dl
 721:	00 00                	add    BYTE PTR [rax],al
 723:	00 00                	add    BYTE PTR [rax],al
 725:	00 0a                	add    BYTE PTR [rdx],cl
 727:	69 64 78 00 01 db 3b 	imul   esp,DWORD PTR [rax+rdi*2+0x0],0x3bdb01
 72e:	00 
 72f:	00 00                	add    BYTE PTR [rax],al
 731:	02 91 6c 09 72 09    	add    dl,BYTE PTR [rcx+0x972096c]
 737:	40 00 00             	add    BYTE PTR [rax],al
 73a:	00 00                	add    BYTE PTR [rax],al
 73c:	00 17                	add    BYTE PTR [rdi],dl
 73e:	00 00                	add    BYTE PTR [rax],al
 740:	00 00                	add    BYTE PTR [rax],al
 742:	00 00                	add    BYTE PTR [rax],al
 744:	00 14 54             	add    BYTE PTR [rsp+rdx*2],dl
 747:	02 00                	add    al,BYTE PTR [rax]
 749:	00 01                	add    BYTE PTR [rcx],al
 74b:	df 86 00 00 00 02    	fild   WORD PTR [rsi+0x2000000]
 751:	91                   	xchg   ecx,eax
 752:	60                   	(bad)  
 753:	00 00                	add    BYTE PTR [rax],al
 755:	00 11                	add    BYTE PTR [rcx],dl
 757:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
 75a:	00 66 04             	add    BYTE PTR [rsi+0x4],ah
 75d:	00 00                	add    BYTE PTR [rax],al
 75f:	12 48 02             	adc    cl,BYTE PTR [rax+0x2]
 762:	00 00                	add    BYTE PTR [rax],al
 764:	ff 00                	inc    DWORD PTR [rax]
 766:	08 23                	or     BYTE PTR [rbx],ah
 768:	02 00                	add    al,BYTE PTR [rax]
 76a:	00 01                	add    BYTE PTR [rcx],al
 76c:	e7 8b                	out    0x8b,eax
 76e:	09 40 00             	or     DWORD PTR [rax+0x0],eax
 771:	00 00                	add    BYTE PTR [rax],al
 773:	00 00                	add    BYTE PTR [rax],al
 775:	53                   	push   rbx
 776:	00 00                	add    BYTE PTR [rax],al
 778:	00 00                	add    BYTE PTR [rax],al
 77a:	00 00                	add    BYTE PTR [rax],al
 77c:	00 01                	add    BYTE PTR [rcx],al
 77e:	9c                   	pushf  
 77f:	a0 04 00 00 14 dd 01 	movabs al,ds:0x1dd14000004
 786:	00 00 
 788:	01 e8                	add    eax,ebp
 78a:	d5                   	(bad)  
 78b:	03 00                	add    eax,DWORD PTR [rax]
 78d:	00 02                	add    BYTE PTR [rdx],al
 78f:	91                   	xchg   ecx,eax
 790:	67 14 0b             	addr32 adc al,0xb
 793:	02 00                	add    al,BYTE PTR [rax]
 795:	00 01                	add    BYTE PTR [rcx],al
 797:	e9 d5 03 00 00       	jmp    b71 <_start-0x3ff48f>
 79c:	02 91 5e 00 11 9d    	add    dl,BYTE PTR [rcx-0x62eeffa2]
 7a2:	02 00                	add    al,BYTE PTR [rax]
 7a4:	00 b0 04 00 00 12    	add    BYTE PTR [rax+0x12000004],dh
 7aa:	48 02 00             	rex.W add al,BYTE PTR [rax]
 7ad:	00 06                	add    BYTE PTR [rsi],al
 7af:	00 15 1a 02 00 00    	add    BYTE PTR [rip+0x21a],dl        # 9cf <_start-0x3ff631>
 7b5:	01 0c a0             	add    DWORD PTR [rax+riz*4],ecx
 7b8:	04 00                	add    al,0x0
 7ba:	00 09                	add    BYTE PTR [rcx],cl
 7bc:	03 00                	add    eax,DWORD PTR [rax]
 7be:	20 40 00             	and    BYTE PTR [rax+0x0],al
 7c1:	00 00                	add    BYTE PTR [rax],al
 7c3:	00 00                	add    BYTE PTR [rax],al
 7c5:	11 86 00 00 00 d5    	adc    DWORD PTR [rsi-0x2b000000],eax
 7cb:	04 00                	add    al,0x0
 7cd:	00 12                	add    BYTE PTR [rdx],dl
 7cf:	48 02 00             	rex.W add al,BYTE PTR [rax]
 7d2:	00 06                	add    BYTE PTR [rsi],al
 7d4:	00 15 30 02 00 00    	add    BYTE PTR [rip+0x230],dl        # a0a <_start-0x3ff5f6>
 7da:	01 d3                	add    ebx,edx
 7dc:	c5 04 00             	(bad)
 7df:	00 09                	add    BYTE PTR [rcx],cl
 7e1:	03 40 20             	add    eax,DWORD PTR [rax+0x20]
 7e4:	40 00 00             	add    BYTE PTR [rax],al
 7e7:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [rcx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <bss+0x2cae316>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   b:	11 01                	adc    DWORD PTR [rcx],eax
   d:	12 07                	adc    al,BYTE PTR [rdi]
   f:	10 17                	adc    BYTE PTR [rdi],dl
  11:	00 00                	add    BYTE PTR [rax],al
  13:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
  16:	0b 0b                	or     ecx,DWORD PTR [rbx]
  18:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  1b:	0e                   	(bad)  
  1c:	00 00                	add    BYTE PTR [rax],al
  1e:	03 16                	add    edx,DWORD PTR [rsi]
  20:	00 03                	add    BYTE PTR [rbx],al
  22:	0e                   	(bad)  
  23:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  25:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  27:	49 13 00             	adc    rax,QWORD PTR [r8]
  2a:	00 04 24             	add    BYTE PTR [rsp],al
  2d:	00 0b                	add    BYTE PTR [rbx],cl
  2f:	0b 3e                	or     edi,DWORD PTR [rsi]
  31:	0b 03                	or     eax,DWORD PTR [rbx]
  33:	08 00                	or     BYTE PTR [rax],al
  35:	00 05 2e 00 3f 19    	add    BYTE PTR [rip+0x193f002e],al        # 193f0069 <bss+0x18fed069>
  3b:	03 0e                	add    ecx,DWORD PTR [rsi]
  3d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  3f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  41:	49 13 11             	adc    rdx,QWORD PTR [r9]
  44:	01 12                	add    DWORD PTR [rdx],edx
  46:	07                   	(bad)  
  47:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
  4e:	06                   	(bad)  
  4f:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
  52:	19 03                	sbb    DWORD PTR [rbx],eax
  54:	0e                   	(bad)  
  55:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  57:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  59:	27                   	(bad)  
  5a:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
  5d:	11 01                	adc    DWORD PTR [rcx],eax
  5f:	12 07                	adc    al,BYTE PTR [rdi]
  61:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
  68:	00 00                	add    BYTE PTR [rax],al
  6a:	07                   	(bad)  
  6b:	05 00 03 0e 3a       	add    eax,0x3a0e0300
  70:	0b 3b                	or     edi,DWORD PTR [rbx]
  72:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  75:	02 18                	add    bl,BYTE PTR [rax]
  77:	00 00                	add    BYTE PTR [rax],al
  79:	08 05 00 03 08 3a    	or     BYTE PTR [rip+0x3a080300],al        # 3a08037f <bss+0x39c7d37f>
  7f:	0b 3b                	or     edi,DWORD PTR [rbx]
  81:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  84:	02 18                	add    bl,BYTE PTR [rax]
  86:	00 00                	add    BYTE PTR [rax],al
  88:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
  8b:	03 08                	add    ecx,DWORD PTR [rax]
  8d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  8f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  91:	49 13 02             	adc    rax,QWORD PTR [r10]
  94:	18 00                	sbb    BYTE PTR [rax],al
  96:	00 0a                	add    BYTE PTR [rdx],cl
  98:	0f 00 0b             	str    WORD PTR [rbx]
  9b:	0b 00                	or     eax,DWORD PTR [rax]
  9d:	00 0b                	add    BYTE PTR [rbx],cl
  9f:	0f 00 0b             	str    WORD PTR [rbx]
  a2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  a5:	00 00                	add    BYTE PTR [rax],al
  a7:	0c 34                	or     al,0x34
  a9:	00 03                	add    BYTE PTR [rbx],al
  ab:	08 3a                	or     BYTE PTR [rdx],bh
  ad:	0b 3b                	or     edi,DWORD PTR [rbx]
  af:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  b2:	3f                   	(bad)  
  b3:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  b6:	00 00                	add    BYTE PTR [rax],al
  b8:	0d 34 00 03 0e       	or     eax,0xe030034
  bd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  bf:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  c1:	49 13 3f             	adc    rdi,QWORD PTR [r15]
  c4:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
  c7:	00 00                	add    BYTE PTR [rax],al
  c9:	00 01                	add    BYTE PTR [rcx],al
  cb:	11 01                	adc    DWORD PTR [rcx],eax
  cd:	25 0e 13 0b 03       	and    eax,0x30b130e
  d2:	0e                   	(bad)  
  d3:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
  d5:	11 01                	adc    DWORD PTR [rcx],eax
  d7:	12 07                	adc    al,BYTE PTR [rdi]
  d9:	10 17                	adc    BYTE PTR [rdi],dl
  db:	00 00                	add    BYTE PTR [rax],al
  dd:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
  e0:	0b 0b                	or     ecx,DWORD PTR [rbx]
  e2:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  e5:	0e                   	(bad)  
  e6:	00 00                	add    BYTE PTR [rax],al
  e8:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
  eb:	0b 0b                	or     ecx,DWORD PTR [rbx]
  ed:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
  f0:	08 00                	or     BYTE PTR [rax],al
  f2:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
  f5:	01 3f                	add    DWORD PTR [rdi],edi
  f7:	19 03                	sbb    DWORD PTR [rbx],eax
  f9:	0e                   	(bad)  
  fa:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  fc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  fe:	27                   	(bad)  
  ff:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 102:	11 01                	adc    DWORD PTR [rcx],eax
 104:	12 07                	adc    al,BYTE PTR [rdi]
 106:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
 10d:	00 00                	add    BYTE PTR [rax],al
 10f:	05 05 00 03 08       	add    eax,0x8030005
 114:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 116:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 118:	49 13 02             	adc    rax,QWORD PTR [r10]
 11b:	18 00                	sbb    BYTE PTR [rax],al
 11d:	00 06                	add    BYTE PTR [rsi],al
 11f:	34 00                	xor    al,0x0
 121:	03 08                	add    ecx,DWORD PTR [rax]
 123:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 125:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 127:	49 13 02             	adc    rax,QWORD PTR [r10]
 12a:	18 00                	sbb    BYTE PTR [rax],al
 12c:	00 07                	add    BYTE PTR [rdi],al
 12e:	0f 00 0b             	str    WORD PTR [rbx]
 131:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 134:	00 00                	add    BYTE PTR [rax],al
 136:	08 26                	or     BYTE PTR [rsi],ah
 138:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 13b:	00 00                	add    BYTE PTR [rax],al
 13d:	09 05 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],eax        # 3a0e0443 <bss+0x39cdd443>
 143:	0b 3b                	or     edi,DWORD PTR [rbx]
 145:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 148:	02 18                	add    bl,BYTE PTR [rax]
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	0a 2e                	or     ch,BYTE PTR [rsi]
 14e:	01 3f                	add    DWORD PTR [rdi],edi
 150:	19 03                	sbb    DWORD PTR [rbx],eax
 152:	0e                   	(bad)  
 153:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 155:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 157:	27                   	(bad)  
 158:	19 11                	sbb    DWORD PTR [rcx],edx
 15a:	01 12                	add    DWORD PTR [rdx],edx
 15c:	07                   	(bad)  
 15d:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
 164:	00 00                	add    BYTE PTR [rax],al
 166:	0b 2e                	or     ebp,DWORD PTR [rsi]
 168:	01 3f                	add    DWORD PTR [rdi],edi
 16a:	19 03                	sbb    DWORD PTR [rbx],eax
 16c:	0e                   	(bad)  
 16d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 16f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 171:	49 13 11             	adc    rdx,QWORD PTR [r9]
 174:	01 12                	add    DWORD PTR [rdx],edx
 176:	07                   	(bad)  
 177:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
 17e:	00 00                	add    BYTE PTR [rax],al
 180:	0c 2e                	or     al,0x2e
 182:	01 3f                	add    DWORD PTR [rdi],edi
 184:	19 03                	sbb    DWORD PTR [rbx],eax
 186:	0e                   	(bad)  
 187:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 189:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 18b:	27                   	(bad)  
 18c:	19 11                	sbb    DWORD PTR [rcx],edx
 18e:	01 12                	add    DWORD PTR [rdx],edx
 190:	07                   	(bad)  
 191:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
 198:	00 01                	add    BYTE PTR [rcx],al
 19a:	11 01                	adc    DWORD PTR [rcx],eax
 19c:	25 0e 13 0b 03       	and    eax,0x30b130e
 1a1:	0e                   	(bad)  
 1a2:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 1a4:	11 01                	adc    DWORD PTR [rcx],eax
 1a6:	12 07                	adc    al,BYTE PTR [rdi]
 1a8:	10 17                	adc    BYTE PTR [rdi],dl
 1aa:	00 00                	add    BYTE PTR [rax],al
 1ac:	02 2e                	add    ch,BYTE PTR [rsi]
 1ae:	00 3f                	add    BYTE PTR [rdi],bh
 1b0:	19 03                	sbb    DWORD PTR [rbx],eax
 1b2:	0e                   	(bad)  
 1b3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1b5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 1b7:	49 13 11             	adc    rdx,QWORD PTR [r9]
 1ba:	01 12                	add    DWORD PTR [rdx],edx
 1bc:	07                   	(bad)  
 1bd:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
 1c4:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
 1c7:	0b 0b                	or     ecx,DWORD PTR [rbx]
 1c9:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
 1cc:	08 00                	or     BYTE PTR [rax],al
 1ce:	00 00                	add    BYTE PTR [rax],al
 1d0:	01 11                	add    DWORD PTR [rcx],edx
 1d2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b14e6 <bss+0x2cae4e6>
 1d8:	0e                   	(bad)  
 1d9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
 1db:	11 01                	adc    DWORD PTR [rcx],eax
 1dd:	12 07                	adc    al,BYTE PTR [rdi]
 1df:	10 17                	adc    BYTE PTR [rdi],dl
 1e1:	00 00                	add    BYTE PTR [rax],al
 1e3:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
 1e6:	0b 0b                	or     ecx,DWORD PTR [rbx]
 1e8:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
 1eb:	0e                   	(bad)  
 1ec:	00 00                	add    BYTE PTR [rax],al
 1ee:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
 1f1:	0b 0b                	or     ecx,DWORD PTR [rbx]
 1f3:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
 1f6:	08 00                	or     BYTE PTR [rax],al
 1f8:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
 1fb:	00 03                	add    BYTE PTR [rbx],al
 1fd:	0e                   	(bad)  
 1fe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 200:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 202:	49 13 00             	adc    rax,QWORD PTR [r8]
 205:	00 05 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],al        # b0b021a <bss+0xacad21a>
 20b:	49 13 00             	adc    rax,QWORD PTR [r8]
 20e:	00 06                	add    BYTE PTR [rsi],al
 210:	15 00 27 19 00       	adc    eax,0x192700
 215:	00 07                	add    BYTE PTR [rdi],al
 217:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
 21a:	19 03                	sbb    DWORD PTR [rbx],eax
 21c:	0e                   	(bad)  
 21d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 21f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 221:	11 01                	adc    DWORD PTR [rcx],eax
 223:	12 07                	adc    al,BYTE PTR [rdi]
 225:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
 22c:	08 2e                	or     BYTE PTR [rsi],ch
 22e:	01 3f                	add    DWORD PTR [rdi],edi
 230:	19 03                	sbb    DWORD PTR [rbx],eax
 232:	0e                   	(bad)  
 233:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 235:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 237:	11 01                	adc    DWORD PTR [rcx],eax
 239:	12 07                	adc    al,BYTE PTR [rdi]
 23b:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
 242:	00 00                	add    BYTE PTR [rax],al
 244:	09 0b                	or     DWORD PTR [rbx],ecx
 246:	01 11                	add    DWORD PTR [rcx],edx
 248:	01 12                	add    DWORD PTR [rdx],edx
 24a:	07                   	(bad)  
 24b:	00 00                	add    BYTE PTR [rax],al
 24d:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
 250:	03 08                	add    ecx,DWORD PTR [rax]
 252:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 254:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 256:	49 13 02             	adc    rax,QWORD PTR [r10]
 259:	18 00                	sbb    BYTE PTR [rax],al
 25b:	00 0b                	add    BYTE PTR [rbx],cl
 25d:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
 260:	19 03                	sbb    DWORD PTR [rbx],eax
 262:	0e                   	(bad)  
 263:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 265:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 267:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 26b:	00 00                	add    BYTE PTR [rax],al
 26d:	0c 18                	or     al,0x18
 26f:	00 00                	add    BYTE PTR [rax],al
 271:	00 0d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],cl        # 193f03a5 <bss+0x18fed3a5>
 277:	03 0e                	add    ecx,DWORD PTR [rsi]
 279:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 27b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 27d:	27                   	(bad)  
 27e:	19 11                	sbb    DWORD PTR [rcx],edx
 280:	01 12                	add    DWORD PTR [rdx],edx
 282:	07                   	(bad)  
 283:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
 28a:	00 00                	add    BYTE PTR [rax],al
 28c:	0e                   	(bad)  
 28d:	05 00 03 08 3a       	add    eax,0x3a080300
 292:	0b 3b                	or     edi,DWORD PTR [rbx]
 294:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 297:	02 18                	add    bl,BYTE PTR [rax]
 299:	00 00                	add    BYTE PTR [rax],al
 29b:	0f 05                	syscall 
 29d:	00 03                	add    BYTE PTR [rbx],al
 29f:	0e                   	(bad)  
 2a0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2a2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 2a4:	49 13 02             	adc    rax,QWORD PTR [r10]
 2a7:	18 00                	sbb    BYTE PTR [rax],al
 2a9:	00 10                	add    BYTE PTR [rax],dl
 2ab:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
 2ae:	19 03                	sbb    DWORD PTR [rbx],eax
 2b0:	08 3a                	or     BYTE PTR [rdx],bh
 2b2:	0b 3b                	or     edi,DWORD PTR [rbx]
 2b4:	0b 27                	or     esp,DWORD PTR [rdi]
 2b6:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 2b9:	11 01                	adc    DWORD PTR [rcx],eax
 2bb:	12 07                	adc    al,BYTE PTR [rdi]
 2bd:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
 2c4:	00 00                	add    BYTE PTR [rax],al
 2c6:	11 01                	adc    DWORD PTR [rcx],eax
 2c8:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
 2cb:	01 13                	add    DWORD PTR [rbx],edx
 2cd:	00 00                	add    BYTE PTR [rax],al
 2cf:	12 21                	adc    ah,BYTE PTR [rcx]
 2d1:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 2d4:	2f                   	(bad)  
 2d5:	0b 00                	or     eax,DWORD PTR [rax]
 2d7:	00 13                	add    BYTE PTR [rbx],dl
 2d9:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
 2dc:	19 03                	sbb    DWORD PTR [rbx],eax
 2de:	0e                   	(bad)  
 2df:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2e1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 2e3:	27                   	(bad)  
 2e4:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
 2e7:	11 01                	adc    DWORD PTR [rcx],eax
 2e9:	12 07                	adc    al,BYTE PTR [rdi]
 2eb:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
 2f2:	00 00                	add    BYTE PTR [rax],al
 2f4:	14 34                	adc    al,0x34
 2f6:	00 03                	add    BYTE PTR [rbx],al
 2f8:	0e                   	(bad)  
 2f9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2fb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 2fd:	49 13 02             	adc    rax,QWORD PTR [r10]
 300:	18 00                	sbb    BYTE PTR [rax],al
 302:	00 15 34 00 03 0e    	add    BYTE PTR [rip+0xe030034],dl        # e03033c <bss+0xdc2d33c>
 308:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 30a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 30c:	49 13 3f             	adc    rdi,QWORD PTR [r15]
 30f:	19 02                	sbb    DWORD PTR [rdx],eax
 311:	18 00                	sbb    BYTE PTR [rax],al
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	00 00                	add    BYTE PTR [rax],al
  12:	40 00 00             	add    BYTE PTR [rax],al
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
	...
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	2c 00                	sub    al,0x0
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 00                	add    al,BYTE PTR [rax]
  36:	2f                   	(bad)  
  37:	01 00                	add    DWORD PTR [rax],eax
  39:	00 08                	add    BYTE PTR [rax],cl
  3b:	00 00                	add    BYTE PTR [rax],al
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
  42:	40 00 00             	add    BYTE PTR [rax],al
  45:	00 00                	add    BYTE PTR [rax],al
  47:	00 27                	add    BYTE PTR [rdi],ah
  49:	01 00                	add    DWORD PTR [rax],eax
	...
  5f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  62:	00 00                	add    BYTE PTR [rax],al
  64:	02 00                	add    al,BYTE PTR [rax]
  66:	ae                   	scas   al,BYTE PTR es:[rdi]
  67:	02 00                	add    al,BYTE PTR [rax]
  69:	00 08                	add    BYTE PTR [rax],cl
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 a4 01 40 00 00 00 	add    BYTE PTR [rcx+rax*1+0x40],ah
  76:	00 00                	add    BYTE PTR [rax],al
  78:	0b 00                	or     eax,DWORD PTR [rax]
	...
  8e:	00 00                	add    BYTE PTR [rax],al
  90:	2c 00                	sub    al,0x0
  92:	00 00                	add    BYTE PTR [rax],al
  94:	02 00                	add    al,BYTE PTR [rax]
  96:	00 03                	add    BYTE PTR [rbx],al
  98:	00 00                	add    BYTE PTR [rax],al
  9a:	08 00                	or     BYTE PTR [rax],al
  9c:	00 00                	add    BYTE PTR [rax],al
  9e:	00 00                	add    BYTE PTR [rax],al
  a0:	af                   	scas   eax,DWORD PTR es:[rdi]
  a1:	01 40 00             	add    DWORD PTR [rax+0x0],eax
  a4:	00 00                	add    BYTE PTR [rax],al
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	2f                   	(bad)  
  a9:	08 00                	or     BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	82                   	(bad)  
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 02                	add    BYTE PTR [rdx],al
   5:	00 5a 00             	add    BYTE PTR [rdx+0x0],bl
   8:	00 00                	add    BYTE PTR [rax],al
   a:	01 01                	add    DWORD PTR [rcx],eax
   c:	fb                   	sti    
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [rax],eax
  15:	00 00                	add    BYTE PTR [rax],al
  17:	01 00                	add    DWORD PTR [rax],eax
  19:	00 01                	add    BYTE PTR [rcx],al
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_start-0x3fff6f>
  1e:	72 2f                	jb     4f <_start-0x3fffb1>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  28:	78 38                	js     62 <_start-0x3fff9e>
  2a:	36 5f                	ss pop rdi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[rdi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_start-0x3fff98>
  39:	34 2e                	xor    al,0x2e
  3b:	39 2f                	cmp    DWORD PTR [rdi],ebp
  3d:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  44:	00 00                	add    BYTE PTR [rax],al
  46:	5f                   	pop    rdi
  47:	6c                   	ins    BYTE PTR es:[rdi],dx
  48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  49:	61                   	(bad)  
  4a:	64 65 72 2e          	fs gs jb 7c <_start-0x3fff84>
  4e:	63 00                	movsxd eax,DWORD PTR [rax]
  50:	00 00                	add    BYTE PTR [rax],al
  52:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
  55:	64 69 6e 74 2d 67 63 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6363672d
  5c:	63 
  5d:	2e 68 00 01 00 00    	cs push 0x100
  63:	00 00                	add    BYTE PTR [rax],al
  65:	09 02                	or     DWORD PTR [rdx],eax
  67:	00 00                	add    BYTE PTR [rax],al
  69:	40 00 00             	add    BYTE PTR [rax],al
  6c:	00 00                	add    BYTE PTR [rax],al
  6e:	00 03                	add    BYTE PTR [rbx],al
  70:	0a 01                	or     al,BYTE PTR [rcx]
  72:	4c 02 22             	rex.WR add r12b,BYTE PTR [rdx]
  75:	14 9f                	adc    al,0x9f
  77:	30 08                	xor    BYTE PTR [rax],cl
  79:	2f                   	(bad)  
  7a:	67 84 2f             	test   BYTE PTR [edi],ch
  7d:	ff 08                	dec    DWORD PTR [rax]
  7f:	15 4b 02 02 00       	adc    eax,0x2024b
  84:	01 01                	add    DWORD PTR [rcx],eax
  86:	69 00 00 00 02 00    	imul   eax,DWORD PTR [rax],0x20000
  8c:	21 00                	and    DWORD PTR [rax],eax
  8e:	00 00                	add    BYTE PTR [rax],al
  90:	01 01                	add    DWORD PTR [rcx],eax
  92:	fb                   	sti    
  93:	0e                   	(bad)  
  94:	0d 00 01 01 01       	or     eax,0x1010100
  99:	01 00                	add    DWORD PTR [rax],eax
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	01 00                	add    DWORD PTR [rax],eax
  9f:	00 01                	add    BYTE PTR [rcx],al
  a1:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
  a4:	65 72 5f             	gs jb  106 <_start-0x3ffefa>
  a7:	6c                   	ins    BYTE PTR es:[rdi],dx
  a8:	69 62 2e 63 00 00 00 	imul   esp,DWORD PTR [rdx+0x2e],0x63
  af:	00 00                	add    BYTE PTR [rax],al
  b1:	00 09                	add    BYTE PTR [rcx],cl
  b3:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
  b6:	40 00 00             	add    BYTE PTR [rax],al
  b9:	00 00                	add    BYTE PTR [rax],al
  bb:	00 17                	add    BYTE PTR [rdi],dl
  bd:	bb 75 00 02 04       	mov    ebx,0x4020075
  c2:	01 06                	add    DWORD PTR [rsi],eax
  c4:	20 06                	and    BYTE PTR [rsi],al
  c6:	08 91 67 30 f3 2f    	or     BYTE PTR [rcx+0x2ff33067],dl
  cc:	00 02                	add    BYTE PTR [rdx],al
  ce:	04 01                	add    al,0x1
  d0:	06                   	(bad)  
  d1:	02 22                	add    ah,BYTE PTR [rdx]
  d3:	12 06                	adc    al,BYTE PTR [rsi]
  d5:	08 ff                	or     bh,bh
  d7:	00 02                	add    BYTE PTR [rdx],al
  d9:	04 01                	add    al,0x1
  db:	06                   	(bad)  
  dc:	ac                   	lods   al,BYTE PTR ds:[rsi]
  dd:	06                   	(bad)  
  de:	ae                   	scas   al,BYTE PTR es:[rdi]
  df:	59                   	pop    rcx
  e0:	30 bb 08 e5 30 83    	xor    BYTE PTR [rbx-0x7ccf1af8],bh
  e6:	4b 08 59 75          	rex.WXB or BYTE PTR [r9+0x75],bl
  ea:	30 c9                	xor    cl,cl
  ec:	08 59 02             	or     BYTE PTR [rcx+0x2],bl
  ef:	02 00                	add    al,BYTE PTR [rax]
  f1:	01 01                	add    DWORD PTR [rcx],eax
  f3:	42 00 00             	rex.X add BYTE PTR [rax],al
  f6:	00 02                	add    BYTE PTR [rdx],al
  f8:	00 29                	add    BYTE PTR [rcx],ch
  fa:	00 00                	add    BYTE PTR [rax],al
  fc:	00 01                	add    BYTE PTR [rcx],al
  fe:	01 fb                	add    ebx,edi
 100:	0e                   	(bad)  
 101:	0d 00 01 01 01       	or     eax,0x1010100
 106:	01 00                	add    DWORD PTR [rax],eax
 108:	00 00                	add    BYTE PTR [rax],al
 10a:	01 00                	add    DWORD PTR [rax],eax
 10c:	00 01                	add    BYTE PTR [rcx],al
 10e:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
 111:	6d                   	ins    DWORD PTR es:[rdi],dx
 112:	70 6c                	jo     180 <_start-0x3ffe80>
 114:	65 43 6f             	rex.XB outs dx,DWORD PTR gs:[rsi]
 117:	64 65 4d 6f          	fs rex.WRB outs dx,DWORD PTR gs:[rsi]
 11b:	64 75 6c             	fs jne 18a <_start-0x3ffe76>
 11e:	65 2e 63 00          	gs movsxd eax,DWORD PTR cs:[rax]
 122:	00 00                	add    BYTE PTR [rax],al
 124:	00 00                	add    BYTE PTR [rax],al
 126:	00 09                	add    BYTE PTR [rcx],cl
 128:	02 a4 01 40 00 00 00 	add    ah,BYTE PTR [rcx+rax*1+0x40]
 12f:	00 00                	add    BYTE PTR [rax],al
 131:	15 4b 59 02 02       	adc    eax,0x202594b
 136:	00 01                	add    BYTE PTR [rcx],al
 138:	01 a8 01 00 00 02    	add    DWORD PTR [rax+0x2000001],ebp
 13e:	00 58 00             	add    BYTE PTR [rax+0x0],bl
 141:	00 00                	add    BYTE PTR [rax],al
 143:	01 01                	add    DWORD PTR [rcx],eax
 145:	fb                   	sti    
 146:	0e                   	(bad)  
 147:	0d 00 01 01 01       	or     eax,0x1010100
 14c:	01 00                	add    DWORD PTR [rax],eax
 14e:	00 00                	add    BYTE PTR [rax],al
 150:	01 00                	add    DWORD PTR [rax],eax
 152:	00 01                	add    BYTE PTR [rcx],al
 154:	2f                   	(bad)  
 155:	75 73                	jne    1ca <_start-0x3ffe36>
 157:	72 2f                	jb     188 <_start-0x3ffe78>
 159:	6c                   	ins    BYTE PTR es:[rdi],dx
 15a:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
 161:	78 38                	js     19b <_start-0x3ffe65>
 163:	36 5f                	ss pop rdi
 165:	36 34 2d             	ss xor al,0x2d
 168:	6c                   	ins    BYTE PTR es:[rdi],dx
 169:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 170:	75 2f                	jne    1a1 <_start-0x3ffe5f>
 172:	34 2e                	xor    al,0x2e
 174:	39 2f                	cmp    DWORD PTR [rdi],ebp
 176:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 17d:	00 00                	add    BYTE PTR [rax],al
 17f:	73 68                	jae    1e9 <_start-0x3ffe17>
 181:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 183:	6c                   	ins    BYTE PTR es:[rdi],dx
 184:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
 187:	00 00                	add    BYTE PTR [rax],al
 189:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 18c:	64 69 6e 74 2d 67 63 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6363672d
 193:	63 
 194:	2e 68 00 01 00 00    	cs push 0x100
 19a:	00 00                	add    BYTE PTR [rax],al
 19c:	09 02                	or     DWORD PTR [rdx],eax
 19e:	af                   	scas   eax,DWORD PTR es:[rdi]
 19f:	01 40 00             	add    DWORD PTR [rax+0x0],eax
 1a2:	00 00                	add    BYTE PTR [rax],al
 1a4:	00 00                	add    BYTE PTR [rax],al
 1a6:	03 0e                	add    ecx,DWORD PTR [rsi]
 1a8:	01 4b 9f             	add    DWORD PTR [rbx-0x61],ecx
 1ab:	9f                   	lahf   
 1ac:	9f                   	lahf   
 1ad:	9f                   	lahf   
 1ae:	9f                   	lahf   
 1af:	9f                   	lahf   
 1b0:	9f                   	lahf   
 1b1:	9f                   	lahf   
 1b2:	31 4b 59             	xor    DWORD PTR [rbx+0x59],ecx
 1b5:	30 83 9f c9 9f 75    	xor    BYTE PTR [rbx+0x759fc99f],al
 1bb:	08 68 9f             	or     BYTE PTR [rax-0x61],ch
 1be:	08 3d 9f 08 3d 9f    	or     BYTE PTR [rip+0xffffffff9f3d089f],bh        # ffffffff9f3d0a63 <bss+0xffffffff9efcda63>
 1c4:	08 3d 9f 08 3d 9f    	or     BYTE PTR [rip+0xffffffff9f3d089f],bh        # ffffffff9f3d0a69 <bss+0xffffffff9efcda69>
 1ca:	08 3d 9f 08 3d 9f    	or     BYTE PTR [rip+0xffffffff9f3d089f],bh        # ffffffff9f3d0a6f <bss+0xffffffff9efcda6f>
 1d0:	08 3d 9f 08 3d 9f    	or     BYTE PTR [rip+0xffffffff9f3d089f],bh        # ffffffff9f3d0a75 <bss+0xffffffff9efcda75>
 1d6:	08 3d 9f 08 3e d7    	or     BYTE PTR [rip+0xffffffffd73e089f],bh        # ffffffffd73e0a7b <bss+0xffffffffd6fdda7b>
 1dc:	08 67 9f             	or     BYTE PTR [rdi-0x61],ah
 1df:	08 3d 9f 08 3d 9f    	or     BYTE PTR [rip+0xffffffff9f3d089f],bh        # ffffffff9f3d0a84 <bss+0xffffffff9efcda84>
 1e5:	91                   	xchg   ecx,eax
 1e6:	bc be 00 02 04       	mov    esp,0x40200be
 1eb:	01 a0 00 02 04 01    	add    DWORD PTR [rax+0x1040200],esp
 1f1:	21 30                	and    DWORD PTR [rax],esi
 1f3:	08 13                	or     BYTE PTR [rbx],dl
 1f5:	08 75 bc             	or     BYTE PTR [rbp-0x44],dh
 1f8:	9f                   	lahf   
 1f9:	30 f3                	xor    bl,dh
 1fb:	83 2f 08             	sub    DWORD PTR [rdi],0x8
 1fe:	1f                   	(bad)  
 1ff:	77 4b                	ja     24c <_start-0x3ffdb4>
 201:	30 83 9f 08 3d 76    	xor    BYTE PTR [rbx+0x763d089f],al
 207:	2f                   	(bad)  
 208:	67 bb 00 02 04 01    	addr32 mov ebx,0x1040200
 20e:	06                   	(bad)  
 20f:	66 06                	data16 (bad) 
 211:	67 ad                	lods   eax,DWORD PTR ds:[esi]
 213:	67 67 03 79 02       	addr32 add edi,DWORD PTR [ecx+0x2]
 218:	25 01 00 02 04       	and    eax,0x4020001
 21d:	01 06                	add    DWORD PTR [rsi],eax
 21f:	08 2e                	or     BYTE PTR [rsi],ch
 221:	06                   	(bad)  
 222:	03 0a                	add    ecx,DWORD PTR [rdx]
 224:	66 9f                	data16 lahf 
 226:	9f                   	lahf   
 227:	08 13                	or     BYTE PTR [rbx],dl
 229:	bb 00 02 04 01       	mov    ebx,0x1040200
 22e:	06                   	(bad)  
 22f:	d6                   	(bad)  
 230:	06                   	(bad)  
 231:	d7                   	xlat   BYTE PTR ds:[rbx]
 232:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
 235:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
 238:	06                   	(bad)  
 239:	d6                   	(bad)  
 23a:	06                   	(bad)  
 23b:	d7                   	xlat   BYTE PTR ds:[rbx]
 23c:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
 23f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
 242:	06                   	(bad)  
 243:	d6                   	(bad)  
 244:	06                   	(bad)  
 245:	d7                   	xlat   BYTE PTR ds:[rbx]
 246:	08 76 00             	or     BYTE PTR [rsi+0x0],dh
 249:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
 24c:	e8 00 02 04 02       	call   2040451 <bss+0x1c3d451>
 251:	08 91 00 02 04 02    	or     BYTE PTR [rcx+0x2040200],dl
 257:	03 71 58             	add    esi,DWORD PTR [rcx+0x58]
 25a:	00 02                	add    BYTE PTR [rdx],al
 25c:	04 01                	add    al,0x1
 25e:	06                   	(bad)  
 25f:	4a 06                	rex.WX (bad) 
 261:	03 11                	add    edx,DWORD PTR [rcx]
 263:	08 20                	or     BYTE PTR [rax],ah
 265:	02 3e                	add    bh,BYTE PTR [rsi]
 267:	13 08                	adc    ecx,DWORD PTR [rax]
 269:	2f                   	(bad)  
 26a:	bb 9f 30 bb 75       	mov    ebx,0x75bb309f
 26f:	2f                   	(bad)  
 270:	08 e5                	or     ch,ah
 272:	59                   	pop    rcx
 273:	47 6b 59 30 bb       	rex.RXB imul r11d,DWORD PTR [r9+0x30],0xffffffbb
 278:	76 2f                	jbe    2a9 <_start-0x3ffd57>
 27a:	67 bb 00 02 04 01    	addr32 mov ebx,0x1040200
 280:	06                   	(bad)  
 281:	66 06                	data16 (bad) 
 283:	67 d7                	xlat   BYTE PTR ds:[ebx]
 285:	67 67 03 79 02       	addr32 add edi,DWORD PTR [ecx+0x2]
 28a:	26 01 03             	add    DWORD PTR es:[rbx],eax
 28d:	0a 08                	or     cl,BYTE PTR [rax]
 28f:	2e 67 d8 f3          	cs addr32 fdiv st,st(3)
 293:	30 bb 76 2f 67 bb    	xor    BYTE PTR [rbx-0x4498d08a],bh
 299:	00 02                	add    BYTE PTR [rdx],al
 29b:	04 01                	add    al,0x1
 29d:	06                   	(bad)  
 29e:	66 06                	data16 (bad) 
 2a0:	67 d7                	xlat   BYTE PTR ds:[ebx]
 2a2:	67 67 03 79 02       	addr32 add edi,DWORD PTR [ecx+0x2]
 2a7:	26 01 03             	add    DWORD PTR es:[rbx],eax
 2aa:	0a 08                	or     cl,BYTE PTR [rax]
 2ac:	2e 67 d8 f3          	cs addr32 fdiv st,st(3)
 2b0:	30 bb 75 2f 08 e5    	xor    BYTE PTR [rbx-0x1af7d08b],bh
 2b6:	59                   	pop    rcx
 2b7:	47 6b 59 30 4b       	rex.RXB imul r11d,DWORD PTR [r9+0x30],0x4b
 2bc:	59                   	pop    rcx
 2bd:	30 4b 59             	xor    BYTE PTR [rbx+0x59],cl
 2c0:	30 85 08 2f 9f bb    	xor    BYTE PTR [rbp-0x4460d0f8],al
 2c6:	9f                   	lahf   
 2c7:	bb 9f 32 ad 9f       	mov    ebx,0x9fad329f
 2cc:	08 68 9f             	or     BYTE PTR [rax-0x61],ch
 2cf:	e5 08                	in     eax,0x8
 2d1:	21 67 bc             	and    DWORD PTR [rdi-0x44],esp
 2d4:	08 13                	or     BYTE PTR [rbx],dl
 2d6:	68 33 85 08 2f       	push   0x2f088533
 2db:	9f                   	lahf   
 2dc:	bb 9f bb 9f 02       	mov    ebx,0x29fbb9f
 2e1:	02 00                	add    al,BYTE PTR [rax]
 2e3:	01 01                	add    DWORD PTR [rcx],eax

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	47                   	rex.RXB
   1:	4e 55                	rex.WRX push rbp
   3:	20 43 20             	and    BYTE PTR [rbx+0x20],al
   6:	34 2e                	xor    al,0x2e
   8:	39 2e                	cmp    DWORD PTR [rsi],ebp
   a:	32 20                	xor    ah,BYTE PTR [rax]
   c:	2d 6d 36 34 20       	sub    eax,0x2034366d
  11:	2d 6d 6e 6f 2d       	sub    eax,0x2d6f6e6d
  16:	72 65                	jb     7d <_start-0x3fff83>
  18:	64 2d 7a 6f 6e 65    	fs sub eax,0x656e6f7a
  1e:	20 2d 6d 6e 6f 2d    	and    BYTE PTR [rip+0x2d6f6e6d],ch        # 2d6f6e91 <bss+0x2d2f3e91>
  24:	6d                   	ins    DWORD PTR es:[rdi],dx
  25:	6d                   	ins    DWORD PTR es:[rdi],dx
  26:	78 20                	js     48 <_start-0x3fffb8>
  28:	2d 6d 6e 6f 2d       	sub    eax,0x2d6f6e6d
  2d:	73 73                	jae    a2 <_start-0x3fff5e>
  2f:	65 20 2d 6d 6e 6f 2d 	and    BYTE PTR gs:[rip+0x2d6f6e6d],ch        # 2d6f6ea3 <bss+0x2d2f3ea3>
  36:	73 73                	jae    ab <_start-0x3fff55>
  38:	65 32 20             	xor    ah,BYTE PTR gs:[rax]
  3b:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  40:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  46:	72 69                	jb     b1 <_start-0x3fff4f>
  48:	63 20                	movsxd esp,DWORD PTR [rax]
  4a:	2d 6d 61 72 63       	sub    eax,0x6372616d
  4f:	68 3d 78 38 36       	push   0x3638783d
  54:	2d 36 34 20 2d       	sub    eax,0x2d203436
  59:	67 20 2d 73 74 64 3d 	and    BYTE PTR [eip+0x3d647473],ch        # 3d6474d3 <bss+0x3d2444d3>
  60:	63 39                	movsxd edi,DWORD PTR [rcx]
  62:	39 20                	cmp    DWORD PTR [rax],esp
  64:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
  69:	65 78 63             	gs js  cf <_start-0x3fff31>
  6c:	65 70 74             	gs jo  e3 <_start-0x3fff1d>
  6f:	69 6f 6e 73 20 2d 66 	imul   ebp,DWORD PTR [rdi+0x6e],0x662d2073
  76:	66 72 65             	data16 jb de <_start-0x3fff22>
  79:	65 73 74             	gs jae f0 <_start-0x3fff10>
  7c:	61                   	(bad)  
  7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  7e:	64 69 6e 67 20 2d 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e662d20
  85:	6e 
  86:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  87:	2d 63 6f 6d 6d       	sub    eax,0x6d6d6f63
  8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  8e:	20 2d 66 6e 6f 2d    	and    BYTE PTR [rip+0x2d6f6e66],ch        # 2d6f6efa <bss+0x2d2f3efa>
  94:	62                   	(bad)  
  95:	75 69                	jne    100 <_start-0x3fff00>
  97:	6c                   	ins    BYTE PTR es:[rdi],dx
  98:	74 69                	je     103 <_start-0x3ffefd>
  9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  9b:	2d 6d 61 6c 6c       	sub    eax,0x6c6c616d
  a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  a1:	63 20                	movsxd esp,DWORD PTR [rax]
  a3:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
  a8:	62                   	(bad)  
  a9:	75 69                	jne    114 <_start-0x3ffeec>
  ab:	6c                   	ins    BYTE PTR es:[rdi],dx
  ac:	74 69                	je     117 <_start-0x3ffee9>
  ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  af:	2d 66 72 65 65       	sub    eax,0x65657266
  b4:	20 2d 66 6e 6f 2d    	and    BYTE PTR [rip+0x2d6f6e66],ch        # 2d6f6f20 <bss+0x2d2f3f20>
  ba:	62                   	(bad)  
  bb:	75 69                	jne    126 <_start-0x3ffeda>
  bd:	6c                   	ins    BYTE PTR es:[rdi],dx
  be:	74 69                	je     129 <_start-0x3ffed7>
  c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  c1:	2d 72 65 61 6c       	sub    eax,0x6c616572
  c6:	6c                   	ins    BYTE PTR es:[rdi],dx
  c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  c8:	63 00                	movsxd eax,DWORD PTR [rax]
  ca:	2f                   	(bad)  
  cb:	72 6f                	jb     13c <_start-0x3ffec4>
  cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  ce:	74 2f                	je     ff <_start-0x3fff01>
  d0:	55                   	push   rbp
  d1:	73 65                	jae    138 <_start-0x3ffec8>
  d3:	72 6c                	jb     141 <_start-0x3ffebf>
  d5:	61                   	(bad)  
  d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  d7:	64 2f                	fs (bad) 
  d9:	53                   	push   rbx
  da:	61                   	(bad)  
  db:	6d                   	ins    DWORD PTR es:[rdi],dx
  dc:	70 6c                	jo     14a <_start-0x3ffeb6>
  de:	65 43 6f             	rex.XB outs dx,DWORD PTR gs:[rsi]
  e1:	64 65 4d 6f          	fs rex.WRB outs dx,DWORD PTR gs:[rsi]
  e5:	64 75 6c             	fs jne 154 <_start-0x3ffeac>
  e8:	65 00 75 69          	add    BYTE PTR gs:[rbp+0x69],dh
  ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  ed:	74 36                	je     125 <_start-0x3ffedb>
  ef:	34 5f                	xor    al,0x5f
  f1:	74 00                	je     f3 <_start-0x3fff0d>
  f3:	75 6e                	jne    163 <_start-0x3ffe9d>
  f5:	73 69                	jae    160 <_start-0x3ffea0>
  f7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  f9:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
  fe:	61                   	(bad)  
  ff:	72 00                	jb     101 <_start-0x3ffeff>
 101:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 103:	64 4f                	fs rex.WRXB
 105:	66 42 69 6e 61 72 79 	rex.X imul bp,WORD PTR [rsi+0x61],0x7972
 10c:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
 110:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
 114:	73 69                	jae    17f <_start-0x3ffe81>
 116:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 118:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
 11d:	74 00                	je     11f <_start-0x3ffee1>
 11f:	73 68                	jae    189 <_start-0x3ffe77>
 121:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 122:	72 74                	jb     198 <_start-0x3ffe68>
 124:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
 127:	73 69                	jae    192 <_start-0x3ffe6e>
 129:	67 6e                	outs   dx,BYTE PTR ds:[esi]
 12b:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
 130:	74 00                	je     132 <_start-0x3ffece>
 132:	6d                   	ins    DWORD PTR es:[rdi],dx
 133:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 135:	73 65                	jae    19c <_start-0x3ffe64>
 137:	74 00                	je     139 <_start-0x3ffec7>
 139:	5f                   	pop    rdi
 13a:	73 74                	jae    1b0 <_start-0x3ffe50>
 13c:	61                   	(bad)  
 13d:	72 74                	jb     1b3 <_start-0x3ffe4d>
 13f:	00 64 65 73          	add    BYTE PTR [rbp+riz*2+0x73],ah
 143:	74 69                	je     1ae <_start-0x3ffe52>
 145:	61                   	(bad)  
 146:	74 69                	je     1b1 <_start-0x3ffe4f>
 148:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 149:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 14a:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
 14d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 14e:	74 38                	je     188 <_start-0x3ffe78>
 150:	5f                   	pop    rdi
 151:	74 00                	je     153 <_start-0x3ffead>
 153:	73 68                	jae    1bd <_start-0x3ffe43>
 155:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 156:	72 74                	jb     1cc <_start-0x3ffe34>
 158:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
 15b:	74 00                	je     15d <_start-0x3ffea3>
 15d:	6c                   	ins    BYTE PTR es:[rdi],dx
 15e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 15f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 160:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
 164:	74 00                	je     166 <_start-0x3ffe9a>
 166:	6c                   	ins    BYTE PTR es:[rdi],dx
 167:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 169:	67 74 68             	addr32 je 1d4 <_start-0x3ffe2c>
 16c:	00 5f 6c             	add    BYTE PTR [rdi+0x6c],bl
 16f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 170:	61                   	(bad)  
 171:	64 65 72 2e          	fs gs jb 1a3 <_start-0x3ffe5d>
 175:	63 00                	movsxd eax,DWORD PTR [rax]
 177:	73 74                	jae    1ed <_start-0x3ffe13>
 179:	72 6c                	jb     1e7 <_start-0x3ffe19>
 17b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
 17d:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
 180:	65 72 5f             	gs jb  1e2 <_start-0x3ffe1e>
 183:	6c                   	ins    BYTE PTR es:[rdi],dx
 184:	69 62 2e 63 00 73 74 	imul   esp,DWORD PTR [rdx+0x2e],0x74730063
 18b:	72 31                	jb     1be <_start-0x3ffe42>
 18d:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 190:	72 32                	jb     1c4 <_start-0x3ffe3c>
 192:	00 70 75             	add    BYTE PTR [rax+0x75],dh
 195:	74 63                	je     1fa <_start-0x3ffe06>
 197:	68 61 72 00 67       	push   0x67007261
 19c:	65 74 63             	gs je  202 <_start-0x3ffdfe>
 19f:	68 61 72 00 73       	push   0x73007261
 1a4:	74 72                	je     218 <_start-0x3ffde8>
 1a6:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 1a9:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
 1ac:	7a 65                	jp     213 <_start-0x3ffded>
 1ae:	74 79                	je     229 <_start-0x3ffdd7>
 1b0:	70 65                	jo     217 <_start-0x3ffde9>
 1b2:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 1b5:	69 6e 74 66 00 73 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61730066
 1bc:	6d                   	ins    DWORD PTR es:[rdi],dx
 1bd:	70 6c                	jo     22b <_start-0x3ffdd5>
 1bf:	65 43 6f             	rex.XB outs dx,DWORD PTR gs:[rsi]
 1c2:	64 65 4d 6f          	fs rex.WRB outs dx,DWORD PTR gs:[rsi]
 1c6:	64 75 6c             	fs jne 235 <_start-0x3ffdcb>
 1c9:	65 2e 63 00          	gs movsxd eax,DWORD PTR cs:[rax]
 1cd:	6d                   	ins    DWORD PTR es:[rdi],dx
 1ce:	61                   	(bad)  
 1cf:	69 6e 00 66 65 63 68 	imul   ebp,DWORD PTR [rsi+0x0],0x68636566
 1d6:	61                   	(bad)  
 1d7:	79 68                	jns    241 <_start-0x3ffdbf>
 1d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1da:	72 61                	jb     23d <_start-0x3ffdc3>
 1dc:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
 1e0:	65 62                	gs (bad) 
 1e2:	75 66                	jne    24a <_start-0x3ffdb6>
 1e4:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
 1e7:	76 65                	jbe    24e <_start-0x3ffdb2>
 1e9:	73 00                	jae    1eb <_start-0x3ffe15>
 1eb:	73 68                	jae    255 <_start-0x3ffdab>
 1ed:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 1ef:	6c                   	ins    BYTE PTR es:[rdi],dx
 1f0:	2e 63 00             	movsxd eax,DWORD PTR cs:[rax]
 1f3:	7a 65                	jp     25a <_start-0x3ffda6>
 1f5:	72 6f                	jb     266 <_start-0x3ffd9a>
 1f7:	64 69 76 00 69 6e 66 	imul   esi,DWORD PTR fs:[rsi+0x0],0x6f666e69
 1fe:	6f 
 1ff:	72 65                	jb     266 <_start-0x3ffd9a>
 201:	67 00 77 72          	add    BYTE PTR [edi+0x72],dh
 205:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 206:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 207:	67 6f                	outs   dx,DWORD PTR ds:[esi]
 209:	70 00                	jo     20b <_start-0x3ffdf5>
 20b:	64 61                	fs (bad) 
 20d:	74 65                	je     274 <_start-0x3ffd8c>
 20f:	62                   	(bad)  
 210:	75 66                	jne    278 <_start-0x3ffd88>
 212:	00 61 79             	add    BYTE PTR [rcx+0x79],ah
 215:	75 64                	jne    27b <_start-0x3ffd85>
 217:	61                   	(bad)  
 218:	00 50 63             	add    BYTE PTR [rax+0x63],dl
 21b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 21c:	6d                   	ins    DWORD PTR es:[rdi],dx
 21d:	6d                   	ins    DWORD PTR es:[rdi],dx
 21e:	61                   	(bad)  
 21f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 220:	64 73 00             	fs jae 223 <_start-0x3ffddd>
 223:	66 65 63 68 61       	movsxd bp,DWORD PTR gs:[rax+0x61]
 228:	79 68                	jns    292 <_start-0x3ffd6e>
 22a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 22b:	72 61                	jb     28e <_start-0x3ffd72>
 22d:	5f                   	pop    rdi
 22e:	32 00                	xor    al,BYTE PTR [rax]
 230:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 233:	6d                   	ins    DWORD PTR es:[rdi],dx
 234:	61                   	(bad)  
 235:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 236:	64 5f                	fs pop rdi
 238:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
 23b:	65 73 00             	gs jae 23e <_start-0x3ffdc2>
 23e:	61                   	(bad)  
 23f:	76 61                	jbe    2a2 <_start-0x3ffd5e>
 241:	69 6c 61 62 6c 65 00 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6700656c
 248:	67 
 249:	65 74 5f             	gs je  2ab <_start-0x3ffd55>
 24c:	63 6f 72             	movsxd ebp,DWORD PTR [rdi+0x72]
 24f:	72 65                	jb     2b6 <_start-0x3ffd4a>
 251:	63 74 5f 63          	movsxd esi,DWORD PTR [rdi+rbx*2+0x63]
 255:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 256:	6d                   	ins    DWORD PTR es:[rdi],dx
 257:	6d                   	ins    DWORD PTR es:[rdi],dx
 258:	61                   	(bad)  
 259:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 25a:	64 00 70 72          	add    BYTE PTR fs:[rax+0x72],dh
 25e:	69 6e 74 6d 65 6d 00 	imul   ebp,DWORD PTR [rsi+0x74],0x6d656d
 265:	72 75                	jb     2dc <_start-0x3ffd24>
 267:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 268:	5f                   	pop    rdi
 269:	73 68                	jae    2d3 <_start-0x3ffd2d>
 26b:	65 6c                	gs ins BYTE PTR es:[rdi],dx
 26d:	6c                   	ins    BYTE PTR es:[rdi],dx
 26e:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
 271:	74 5f                	je     2d2 <_start-0x3ffd2e>
 273:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
 276:	6d                   	ins    DWORD PTR es:[rdi],dx
 277:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
 27a:	6d                   	ins    DWORD PTR es:[rdi],dx
 27b:	6d                   	ins    DWORD PTR es:[rdi],dx
 27c:	61                   	(bad)  
 27d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 27e:	64 5f                	fs pop rdi
 280:	6c                   	ins    BYTE PTR es:[rdi],dx
 281:	69 73 74 65 6e 65 72 	imul   esi,DWORD PTR [rbx+0x74],0x72656e65
 288:	00 62 75             	add    BYTE PTR [rdx+0x75],ah
 28b:	66 66 65 72 00       	data16 data16 gs jb 290 <_start-0x3ffd70>
 290:	64 75 6d             	fs jne 300 <_start-0x3ffd00>
 293:	6d                   	ins    DWORD PTR es:[rdi],dx
 294:	79 00                	jns    296 <_start-0x3ffd6a>
 296:	75 69                	jne    301 <_start-0x3ffcff>
 298:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 299:	74 33                	je     2ce <_start-0x3ffd32>
 29b:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
 29e:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
 2a1:	61                   	(bad)  
 2a2:	74 75                	je     319 <_start-0x3ffce7>
 2a4:	72 65                	jb     30b <_start-0x3ffcf5>
 2a6:	73 5f                	jae    307 <_start-0x3ffcf9>
 2a8:	73 75                	jae    31f <_start-0x3ffce1>
 2aa:	70 70                	jo     31c <_start-0x3ffce4>
 2ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2ad:	72 74                	jb     323 <_start-0x3ffcdd>
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 44 65 62          	sub    BYTE PTR [rbp+riz*2+0x62],al
   9:	69 61 6e 20 34 2e 39 	imul   esp,DWORD PTR [rcx+0x6e],0x392e3420
  10:	2e 32 2d 31 30 2b 64 	xor    ch,BYTE PTR cs:[rip+0x642b3031]        # 642b3048 <bss+0x63eb0048>
  17:	65 62                	gs (bad) 
  19:	38 75 31             	cmp    BYTE PTR [rbp+0x31],dh
  1c:	29 20                	sub    DWORD PTR [rax],esp
  1e:	34 2e                	xor    al,0x2e
  20:	39 2e                	cmp    DWORD PTR [rsi],ebp
  22:	32 00                	xor    al,BYTE PTR [rax]
